

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 13 15:14:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F25K50 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _ANSELA	set	3931
    75  0000                     _ANSELB	set	3932
    76  0000                     _ANSELC	set	3933
    77  0000                     _RCREG1	set	4014
    78  0000                     _RCSTA1bits	set	4011
    79  0000                     _TXREG1	set	4013
    80  0000                     _TXSTA1bits	set	4012
    81  0000                     _SPBRGH1	set	4016
    82  0000                     _SPBRG1	set	4015
    83  0000                     _TXSTA1	set	4012
    84  0000                     _RCSTA1	set	4011
    85  0000                     _BAUDCON1	set	4024
    86  0000                     _SSP1BUF	set	4041
    87  0000                     _SSP1CON2bits	set	4037
    88  0000                     _SSP1CON1bits	set	4038
    89  0000                     _SSP1ADD	set	4040
    90  0000                     _SSP1CON3	set	4043
    91  0000                     _SSP1CON1	set	4038
    92  0000                     _SSP1STAT	set	4039
    93  0000                     _PIR1bits	set	3998
    94  0000                     _PIE1bits	set	3997
    95  0000                     _PIR2bits	set	4001
    96  0000                     _PIE2bits	set	4000
    97  0000                     _RCONbits	set	4048
    98  0000                     _INTCON2bits	set	4081
    99  0000                     _WPUB	set	3973
   100  0000                     _TRISC	set	3988
   101  0000                     _TRISB	set	3987
   102  0000                     _TRISA	set	3986
   103  0000                     _LATC	set	3979
   104  0000                     _LATB	set	3978
   105  0000                     _LATA	set	3977
   106  0000                     _LATAbits	set	3977
   107  0000                     _INTCONbits	set	4082
   108  0000                     _ACTCON	set	4021
   109  0000                     _OSCTUNE	set	3995
   110  0000                     _OSCCON2	set	4050
   111  0000                     _OSCCON	set	4051
   112  0000                     _PLLRDY	set	32407
   113                           
   114                           	psect	mediumconst
   115  007E2C                     __pmediumconst:
   116                           	opt stack 0
   117  007E2C  00                 	db	0
   118  007E2D                     STR_9:
   119  007E2D  0A                 	db	10
   120  007E2E  0A                 	db	10
   121  007E2F  49                 	db	73	;'I'
   122  007E30  74                 	db	116	;'t'
   123  007E31  20                 	db	32
   124  007E32  77                 	db	119	;'w'
   125  007E33  6F                 	db	111	;'o'
   126  007E34  75                 	db	117	;'u'
   127  007E35  6C                 	db	108	;'l'
   128  007E36  64                 	db	100	;'d'
   129  007E37  20                 	db	32
   130  007E38  62                 	db	98	;'b'
   131  007E39  65                 	db	101	;'e'
   132  007E3A  20                 	db	32
   133  007E3B  72                 	db	114	;'r'
   134  007E3C  65                 	db	101	;'e'
   135  007E3D  61                 	db	97	;'a'
   136  007E3E  6C                 	db	108	;'l'
   137  007E3F  6C                 	db	108	;'l'
   138  007E40  79                 	db	121	;'y'
   139  007E41  20                 	db	32
   140  007E42  6E                 	db	110	;'n'
   141  007E43  69                 	db	105	;'i'
   142  007E44  63                 	db	99	;'c'
   143  007E45  65                 	db	101	;'e'
   144  007E46  20                 	db	32
   145  007E47  69                 	db	105	;'i'
   146  007E48  66                 	db	102	;'f'
   147  007E49  20                 	db	32
   148  007E4A  74                 	db	116	;'t'
   149  007E4B  68                 	db	104	;'h'
   150  007E4C  65                 	db	101	;'e'
   151  007E4D  72                 	db	114	;'r'
   152  007E4E  65                 	db	101	;'e'
   153  007E4F  20                 	db	32
   154  007E50  77                 	db	119	;'w'
   155  007E51  61                 	db	97	;'a'
   156  007E52  73                 	db	115	;'s'
   157  007E53  20                 	db	32
   158  007E54  61                 	db	97	;'a'
   159  007E55  6E                 	db	110	;'n'
   160  007E56  20                 	db	32
   161  007E57  4C                 	db	76	;'L'
   162  007E58  45                 	db	69	;'E'
   163  007E59  44                 	db	68	;'D'
   164  007E5A  20                 	db	32
   165  007E5B  6F                 	db	111	;'o'
   166  007E5C  6E                 	db	110	;'n'
   167  007E5D  20                 	db	32
   168  007E5E  74                 	db	116	;'t'
   169  007E5F  68                 	db	104	;'h'
   170  007E60  65                 	db	101	;'e'
   171  007E61  20                 	db	32
   172  007E62  62                 	db	98	;'b'
   173  007E63  6F                 	db	111	;'o'
   174  007E64  61                 	db	97	;'a'
   175  007E65  72                 	db	114	;'r'
   176  007E66  64                 	db	100	;'d'
   177  007E67  2E                 	db	46
   178  007E68  2E                 	db	46
   179  007E69  2E                 	db	46
   180  007E6A  0A                 	db	10
   181  007E6B  0A                 	db	10
   182  007E6C  00                 	db	0
   183  007E6D                     STR_1:
   184  007E6D  0A                 	db	10
   185  007E6E  0A                 	db	10
   186  007E6F  54                 	db	84	;'T'
   187  007E70  68                 	db	104	;'h'
   188  007E71  69                 	db	105	;'i'
   189  007E72  73                 	db	115	;'s'
   190  007E73  20                 	db	32
   191  007E74  69                 	db	105	;'i'
   192  007E75  73                 	db	115	;'s'
   193  007E76  20                 	db	32
   194  007E77  74                 	db	116	;'t'
   195  007E78  68                 	db	104	;'h'
   196  007E79  65                 	db	101	;'e'
   197  007E7A  20                 	db	32
   198  007E7B  6D                 	db	109	;'m'
   199  007E7C  61                 	db	97	;'a'
   200  007E7D  69                 	db	105	;'i'
   201  007E7E  6E                 	db	110	;'n'
   202  007E7F  20                 	db	32
   203  007E80  6D                 	db	109	;'m'
   204  007E81  65                 	db	101	;'e'
   205  007E82  6E                 	db	110	;'n'
   206  007E83  75                 	db	117	;'u'
   207  007E84  2E                 	db	46
   208  007E85  20                 	db	32
   209  007E86  20                 	db	32
   210  007E87  4D                 	db	77	;'M'
   211  007E88  61                 	db	97	;'a'
   212  007E89  6B                 	db	107	;'k'
   213  007E8A  65                 	db	101	;'e'
   214  007E8B  20                 	db	32
   215  007E8C  61                 	db	97	;'a'
   216  007E8D  20                 	db	32
   217  007E8E  73                 	db	115	;'s'
   218  007E8F  65                 	db	101	;'e'
   219  007E90  6C                 	db	108	;'l'
   220  007E91  65                 	db	101	;'e'
   221  007E92  63                 	db	99	;'c'
   222  007E93  74                 	db	116	;'t'
   223  007E94  69                 	db	105	;'i'
   224  007E95  6F                 	db	111	;'o'
   225  007E96  6E                 	db	110	;'n'
   226  007E97  3A                 	db	58	;':'
   227  007E98  20                 	db	32
   228  007E99  0A                 	db	10
   229  007E9A  00                 	db	0
   230  007E9B                     STR_18:
   231  007E9B  0A                 	db	10
   232  007E9C  0A                 	db	10
   233  007E9D  52                 	db	82	;'R'
   234  007E9E  65                 	db	101	;'e'
   235  007E9F  74                 	db	116	;'t'
   236  007EA0  75                 	db	117	;'u'
   237  007EA1  72                 	db	114	;'r'
   238  007EA2  6E                 	db	110	;'n'
   239  007EA3  69                 	db	105	;'i'
   240  007EA4  6E                 	db	110	;'n'
   241  007EA5  67                 	db	103	;'g'
   242  007EA6  20                 	db	32
   243  007EA7  74                 	db	116	;'t'
   244  007EA8  6F                 	db	111	;'o'
   245  007EA9  20                 	db	32
   246  007EAA  6D                 	db	109	;'m'
   247  007EAB  61                 	db	97	;'a'
   248  007EAC  69                 	db	105	;'i'
   249  007EAD  6E                 	db	110	;'n'
   250  007EAE  20                 	db	32
   251  007EAF  6D                 	db	109	;'m'
   252  007EB0  65                 	db	101	;'e'
   253  007EB1  6E                 	db	110	;'n'
   254  007EB2  75                 	db	117	;'u'
   255  007EB3  2E                 	db	46
   256  007EB4  2E                 	db	46
   257  007EB5  2E                 	db	46
   258  007EB6  0A                 	db	10
   259  007EB7  00                 	db	0
   260  007EB8                     STR_11:
   261  007EB8  0A                 	db	10
   262  007EB9  0A                 	db	10
   263  007EBA  43                 	db	67	;'C'
   264  007EBB  68                 	db	104	;'h'
   265  007EBC  6F                 	db	111	;'o'
   266  007EBD  6F                 	db	111	;'o'
   267  007EBE  73                 	db	115	;'s'
   268  007EBF  65                 	db	101	;'e'
   269  007EC0  20                 	db	32
   270  007EC1  74                 	db	116	;'t'
   271  007EC2  68                 	db	104	;'h'
   272  007EC3  65                 	db	101	;'e'
   273  007EC4  20                 	db	32
   274  007EC5  72                 	db	114	;'r'
   275  007EC6  65                 	db	101	;'e'
   276  007EC7  6C                 	db	108	;'l'
   277  007EC8  61                 	db	97	;'a'
   278  007EC9  79                 	db	121	;'y'
   279  007ECA  20                 	db	32
   280  007ECB  66                 	db	102	;'f'
   281  007ECC  75                 	db	117	;'u'
   282  007ECD  6E                 	db	110	;'n'
   283  007ECE  63                 	db	99	;'c'
   284  007ECF  74                 	db	116	;'t'
   285  007ED0  69                 	db	105	;'i'
   286  007ED1  6F                 	db	111	;'o'
   287  007ED2  6E                 	db	110	;'n'
   288  007ED3  0A                 	db	10
   289  007ED4  00                 	db	0
   290  007ED5                     STR_12:
   291  007ED5  31                 	db	49	;'1'
   292  007ED6  20                 	db	32
   293  007ED7  3D                 	db	61	;'='
   294  007ED8  20                 	db	32
   295  007ED9  42                 	db	66	;'B'
   296  007EDA  6F                 	db	111	;'o'
   297  007EDB  61                 	db	97	;'a'
   298  007EDC  72                 	db	114	;'r'
   299  007EDD  64                 	db	100	;'d'
   300  007EDE  20                 	db	32
   301  007EDF  50                 	db	80	;'P'
   302  007EE0  6F                 	db	111	;'o'
   303  007EE1  77                 	db	119	;'w'
   304  007EE2  65                 	db	101	;'e'
   305  007EE3  72                 	db	114	;'r'
   306  007EE4  20                 	db	32
   307  007EE5  52                 	db	82	;'R'
   308  007EE6  65                 	db	101	;'e'
   309  007EE7  6C                 	db	108	;'l'
   310  007EE8  61                 	db	97	;'a'
   311  007EE9  79                 	db	121	;'y'
   312  007EEA  20                 	db	32
   313  007EEB  4F                 	db	79	;'O'
   314  007EEC  66                 	db	102	;'f'
   315  007EED  66                 	db	102	;'f'
   316  007EEE  0A                 	db	10
   317  007EEF  00                 	db	0
   318  007EF0                     STR_13:
   319  007EF0  32                 	db	50	;'2'
   320  007EF1  20                 	db	32
   321  007EF2  3D                 	db	61	;'='
   322  007EF3  20                 	db	32
   323  007EF4  42                 	db	66	;'B'
   324  007EF5  6F                 	db	111	;'o'
   325  007EF6  61                 	db	97	;'a'
   326  007EF7  72                 	db	114	;'r'
   327  007EF8  64                 	db	100	;'d'
   328  007EF9  20                 	db	32
   329  007EFA  50                 	db	80	;'P'
   330  007EFB  6F                 	db	111	;'o'
   331  007EFC  77                 	db	119	;'w'
   332  007EFD  65                 	db	101	;'e'
   333  007EFE  72                 	db	114	;'r'
   334  007EFF  20                 	db	32
   335  007F00  52                 	db	82	;'R'
   336  007F01  65                 	db	101	;'e'
   337  007F02  6C                 	db	108	;'l'
   338  007F03  61                 	db	97	;'a'
   339  007F04  79                 	db	121	;'y'
   340  007F05  20                 	db	32
   341  007F06  4F                 	db	79	;'O'
   342  007F07  6E                 	db	110	;'n'
   343  007F08  0A                 	db	10
   344  007F09  00                 	db	0
   345  007F0A                     STR_7:
   346  007F0A  0A                 	db	10
   347  007F0B  0A                 	db	10
   348  007F0C  51                 	db	81	;'Q'
   349  007F0D  75                 	db	117	;'u'
   350  007F0E  69                 	db	105	;'i'
   351  007F0F  74                 	db	116	;'t'
   352  007F10  74                 	db	116	;'t'
   353  007F11  69                 	db	105	;'i'
   354  007F12  6E                 	db	110	;'n'
   355  007F13  67                 	db	103	;'g'
   356  007F14  20                 	db	32
   357  007F15  41                 	db	65	;'A'
   358  007F16  70                 	db	112	;'p'
   359  007F17  70                 	db	112	;'p'
   360  007F18  6C                 	db	108	;'l'
   361  007F19  69                 	db	105	;'i'
   362  007F1A  63                 	db	99	;'c'
   363  007F1B  61                 	db	97	;'a'
   364  007F1C  74                 	db	116	;'t'
   365  007F1D  69                 	db	105	;'i'
   366  007F1E  6F                 	db	111	;'o'
   367  007F1F  6E                 	db	110	;'n'
   368  007F20  2E                 	db	46
   369  007F21  2E                 	db	46
   370  007F22  2E                 	db	46
   371  007F23  00                 	db	0
   372  007F24                     STR_16:
   373  007F24  58                 	db	88	;'X'
   374  007F25  20                 	db	32
   375  007F26  3D                 	db	61	;'='
   376  007F27  20                 	db	32
   377  007F28  52                 	db	82	;'R'
   378  007F29  65                 	db	101	;'e'
   379  007F2A  74                 	db	116	;'t'
   380  007F2B  75                 	db	117	;'u'
   381  007F2C  72                 	db	114	;'r'
   382  007F2D  6E                 	db	110	;'n'
   383  007F2E  20                 	db	32
   384  007F2F  74                 	db	116	;'t'
   385  007F30  6F                 	db	111	;'o'
   386  007F31  20                 	db	32
   387  007F32  6D                 	db	109	;'m'
   388  007F33  61                 	db	97	;'a'
   389  007F34  69                 	db	105	;'i'
   390  007F35  6E                 	db	110	;'n'
   391  007F36  20                 	db	32
   392  007F37  6D                 	db	109	;'m'
   393  007F38  65                 	db	101	;'e'
   394  007F39  6E                 	db	110	;'n'
   395  007F3A  75                 	db	117	;'u'
   396  007F3B  0A                 	db	10
   397  007F3C  00                 	db	0
   398  007F3D                     STR_10:
   399  007F3D  50                 	db	80	;'P'
   400  007F3E  72                 	db	114	;'r'
   401  007F3F  65                 	db	101	;'e'
   402  007F40  73                 	db	115	;'s'
   403  007F41  73                 	db	115	;'s'
   404  007F42  20                 	db	32
   405  007F43  61                 	db	97	;'a'
   406  007F44  6E                 	db	110	;'n'
   407  007F45  79                 	db	121	;'y'
   408  007F46  20                 	db	32
   409  007F47  6B                 	db	107	;'k'
   410  007F48  65                 	db	101	;'e'
   411  007F49  79                 	db	121	;'y'
   412  007F4A  20                 	db	32
   413  007F4B  74                 	db	116	;'t'
   414  007F4C  6F                 	db	111	;'o'
   415  007F4D  20                 	db	32
   416  007F4E  72                 	db	114	;'r'
   417  007F4F  65                 	db	101	;'e'
   418  007F50  74                 	db	116	;'t'
   419  007F51  75                 	db	117	;'u'
   420  007F52  72                 	db	114	;'r'
   421  007F53  6E                 	db	110	;'n'
   422  007F54  00                 	db	0
   423  007F55                     STR_14:
   424  007F55  33                 	db	51	;'3'
   425  007F56  20                 	db	32
   426  007F57  3D                 	db	61	;'='
   427  007F58  20                 	db	32
   428  007F59  42                 	db	66	;'B'
   429  007F5A  61                 	db	97	;'a'
   430  007F5B  74                 	db	116	;'t'
   431  007F5C  74                 	db	116	;'t'
   432  007F5D  65                 	db	101	;'e'
   433  007F5E  72                 	db	114	;'r'
   434  007F5F  79                 	db	121	;'y'
   435  007F60  20                 	db	32
   436  007F61  52                 	db	82	;'R'
   437  007F62  65                 	db	101	;'e'
   438  007F63  6C                 	db	108	;'l'
   439  007F64  61                 	db	97	;'a'
   440  007F65  79                 	db	121	;'y'
   441  007F66  20                 	db	32
   442  007F67  4F                 	db	79	;'O'
   443  007F68  66                 	db	102	;'f'
   444  007F69  66                 	db	102	;'f'
   445  007F6A  0A                 	db	10
   446  007F6B  00                 	db	0
   447  007F6C                     STR_8:
   448  007F6C  0A                 	db	10
   449  007F6D  0A                 	db	10
   450  007F6E  49                 	db	73	;'I'
   451  007F6F  6E                 	db	110	;'n'
   452  007F70  76                 	db	118	;'v'
   453  007F71  61                 	db	97	;'a'
   454  007F72  6C                 	db	108	;'l'
   455  007F73  69                 	db	105	;'i'
   456  007F74  64                 	db	100	;'d'
   457  007F75  20                 	db	32
   458  007F76  73                 	db	115	;'s'
   459  007F77  65                 	db	101	;'e'
   460  007F78  6C                 	db	108	;'l'
   461  007F79  65                 	db	101	;'e'
   462  007F7A  63                 	db	99	;'c'
   463  007F7B  74                 	db	116	;'t'
   464  007F7C  69                 	db	105	;'i'
   465  007F7D  6F                 	db	111	;'o'
   466  007F7E  6E                 	db	110	;'n'
   467  007F7F  2E                 	db	46
   468  007F80  2E                 	db	46
   469  007F81  2E                 	db	46
   470  007F82  00                 	db	0
   471  007F83                     STR_15:
   472  007F83  34                 	db	52	;'4'
   473  007F84  20                 	db	32
   474  007F85  3D                 	db	61	;'='
   475  007F86  20                 	db	32
   476  007F87  42                 	db	66	;'B'
   477  007F88  61                 	db	97	;'a'
   478  007F89  74                 	db	116	;'t'
   479  007F8A  74                 	db	116	;'t'
   480  007F8B  65                 	db	101	;'e'
   481  007F8C  72                 	db	114	;'r'
   482  007F8D  79                 	db	121	;'y'
   483  007F8E  20                 	db	32
   484  007F8F  52                 	db	82	;'R'
   485  007F90  65                 	db	101	;'e'
   486  007F91  6C                 	db	108	;'l'
   487  007F92  61                 	db	97	;'a'
   488  007F93  79                 	db	121	;'y'
   489  007F94  20                 	db	32
   490  007F95  4F                 	db	79	;'O'
   491  007F96  6E                 	db	110	;'n'
   492  007F97  0A                 	db	10
   493  007F98  00                 	db	0
   494  007F99                     STR_5:
   495  007F99  34                 	db	52	;'4'
   496  007F9A  3A                 	db	58	;':'
   497  007F9B  20                 	db	32
   498  007F9C  42                 	db	66	;'B'
   499  007F9D  61                 	db	97	;'a'
   500  007F9E  74                 	db	116	;'t'
   501  007F9F  74                 	db	116	;'t'
   502  007FA0  65                 	db	101	;'e'
   503  007FA1  72                 	db	114	;'r'
   504  007FA2  79                 	db	121	;'y'
   505  007FA3  20                 	db	32
   506  007FA4  50                 	db	80	;'P'
   507  007FA5  6F                 	db	111	;'o'
   508  007FA6  77                 	db	119	;'w'
   509  007FA7  65                 	db	101	;'e'
   510  007FA8  72                 	db	114	;'r'
   511  007FA9  20                 	db	32
   512  007FAA  49                 	db	73	;'I'
   513  007FAB  43                 	db	67	;'C'
   514  007FAC  0A                 	db	10
   515  007FAD  00                 	db	0
   516  007FAE                     STR_4:
   517  007FAE  33                 	db	51	;'3'
   518  007FAF  3A                 	db	58	;':'
   519  007FB0  20                 	db	32
   520  007FB1  42                 	db	66	;'B'
   521  007FB2  6F                 	db	111	;'o'
   522  007FB3  61                 	db	97	;'a'
   523  007FB4  72                 	db	114	;'r'
   524  007FB5  64                 	db	100	;'d'
   525  007FB6  20                 	db	32
   526  007FB7  50                 	db	80	;'P'
   527  007FB8  6F                 	db	111	;'o'
   528  007FB9  77                 	db	119	;'w'
   529  007FBA  65                 	db	101	;'e'
   530  007FBB  72                 	db	114	;'r'
   531  007FBC  20                 	db	32
   532  007FBD  49                 	db	73	;'I'
   533  007FBE  43                 	db	67	;'C'
   534  007FBF  0A                 	db	10
   535  007FC0  00                 	db	0
   536  007FC1                     STR_3:
   537  007FC1  32                 	db	50	;'2'
   538  007FC2  3A                 	db	58	;':'
   539  007FC3  20                 	db	32
   540  007FC4  52                 	db	82	;'R'
   541  007FC5  65                 	db	101	;'e'
   542  007FC6  6C                 	db	108	;'l'
   543  007FC7  61                 	db	97	;'a'
   544  007FC8  79                 	db	121	;'y'
   545  007FC9  20                 	db	32
   546  007FCA  43                 	db	67	;'C'
   547  007FCB  6F                 	db	111	;'o'
   548  007FCC  6E                 	db	110	;'n'
   549  007FCD  74                 	db	116	;'t'
   550  007FCE  72                 	db	114	;'r'
   551  007FCF  6F                 	db	111	;'o'
   552  007FD0  6C                 	db	108	;'l'
   553  007FD1  0A                 	db	10
   554  007FD2  00                 	db	0
   555  007FD3                     STR_2:
   556  007FD3  31                 	db	49	;'1'
   557  007FD4  3A                 	db	58	;':'
   558  007FD5  20                 	db	32
   559  007FD6  4C                 	db	76	;'L'
   560  007FD7  45                 	db	69	;'E'
   561  007FD8  44                 	db	68	;'D'
   562  007FD9  20                 	db	32
   563  007FDA  43                 	db	67	;'C'
   564  007FDB  6F                 	db	111	;'o'
   565  007FDC  6E                 	db	110	;'n'
   566  007FDD  74                 	db	116	;'t'
   567  007FDE  72                 	db	114	;'r'
   568  007FDF  6F                 	db	111	;'o'
   569  007FE0  6C                 	db	108	;'l'
   570  007FE1  0A                 	db	10
   571  007FE2  00                 	db	0
   572  007FE3                     STR_17:
   573  007FE3  0A                 	db	10
   574  007FE4  0A                 	db	10
   575  007FE5  53                 	db	83	;'S'
   576  007FE6  65                 	db	101	;'e'
   577  007FE7  6C                 	db	108	;'l'
   578  007FE8  65                 	db	101	;'e'
   579  007FE9  63                 	db	99	;'c'
   580  007FEA  74                 	db	116	;'t'
   581  007FEB  69                 	db	105	;'i'
   582  007FEC  6F                 	db	111	;'o'
   583  007FED  6E                 	db	110	;'n'
   584  007FEE  3A                 	db	58	;':'
   585  007FEF  20                 	db	32
   586  007FF0  00                 	db	0
   587  007FF1                     STR_6:
   588  007FF1  53                 	db	83	;'S'
   589  007FF2  65                 	db	101	;'e'
   590  007FF3  6C                 	db	108	;'l'
   591  007FF4  65                 	db	101	;'e'
   592  007FF5  63                 	db	99	;'c'
   593  007FF6  74                 	db	116	;'t'
   594  007FF7  69                 	db	105	;'i'
   595  007FF8  6F                 	db	111	;'o'
   596  007FF9  6E                 	db	110	;'n'
   597  007FFA  3A                 	db	58	;':'
   598  007FFB  20                 	db	32
   599  007FFC  20                 	db	32
   600  007FFD  00                 	db	0
   601  0000                     
   602                           ; #config settings
   603  007FFE  00                 	db	0	; dummy byte at the end
   604  0000                     
   605                           	psect	cinit
   606  00070A                     __pcinit:
   607                           	opt stack 0
   608  00070A                     start_initialization:
   609                           	opt stack 0
   610  00070A                     __initialization:
   611                           	opt stack 0
   612                           
   613                           ; Clear objects allocated to BANK0 (64 bytes)
   614  00070A  EE00  F060         	lfsr	0,__pbssBANK0
   615  00070E  0E40               	movlw	64
   616  000710                     clear_0:
   617  000710  6AEE               	clrf	postinc0,c
   618  000712  06E8               	decf	wreg,f,c
   619  000714  E1FD               	bnz	clear_0
   620                           
   621                           ; Clear objects allocated to COMRAM (44 bytes)
   622  000716  EE00  F001         	lfsr	0,__pbssCOMRAM
   623  00071A  0E2C               	movlw	44
   624  00071C                     clear_1:
   625  00071C  6AEE               	clrf	postinc0,c
   626  00071E  06E8               	decf	wreg,f,c
   627  000720  E1FD               	bnz	clear_1
   628  000722                     end_of_initialization:
   629                           	opt stack 0
   630  000722                     __end_of__initialization:
   631                           	opt stack 0
   632  000722  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   633  000724  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   634  000726  0E00               	movlw	low (__Lmediumconst shr (0+16))
   635  000728  6EF8               	movwf	tblptru,c
   636  00072A  0100               	movlb	0
   637  00072C  EF88  F001         	goto	_main	;jump to C main() function
   638                           tblptru	equ	0xFF8
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           
   642                           	psect	bssCOMRAM
   643  000001                     __pbssCOMRAM:
   644                           	opt stack 0
   645  000001                     _i2c1_object:
   646                           	opt stack 0
   647  000001                     	ds	7
   648  000008                     I2C1_ISR@pi2c_buf_ptr:
   649                           	opt stack 0
   650  000008                     	ds	2
   651  00000A                     _p_i2c1_current:
   652                           	opt stack 0
   653  00000A                     	ds	2
   654  00000C                     _p_i2c1_trb_current:
   655                           	opt stack 0
   656  00000C                     	ds	2
   657  00000E                     _EUSART1_RxDefaultInterruptHandler:
   658                           	opt stack 0
   659  00000E                     	ds	2
   660  000010                     _EUSART1_TxDefaultInterruptHandler:
   661                           	opt stack 0
   662  000010                     	ds	2
   663  000012                     _eusart1RxCount:
   664                           	opt stack 0
   665  000012                     	ds	1
   666  000013                     _eusart1RxTail:
   667                           	opt stack 0
   668  000013                     	ds	1
   669  000014                     _eusart1RxHead:
   670                           	opt stack 0
   671  000014                     	ds	1
   672  000015                     _eusart1TxBufferRemaining:
   673                           	opt stack 0
   674  000015                     	ds	1
   675  000016                     _eusart1TxTail:
   676                           	opt stack 0
   677  000016                     	ds	1
   678  000017                     _eusart1TxHead:
   679                           	opt stack 0
   680  000017                     	ds	1
   681  000018                     I2C1_ISR@i2c_10bit_address_restart:
   682                           	opt stack 0
   683  000018                     	ds	1
   684  000019                     I2C1_ISR@i2c_bytes_left:
   685                           	opt stack 0
   686  000019                     	ds	1
   687  00001A                     _i2c1_trb_count:
   688                           	opt stack 0
   689  00001A                     	ds	1
   690  00001B                     _i2c1_state:
   691                           	opt stack 0
   692  00001B                     	ds	1
   693  00001C                     I2C1_MasterRead@trBlock:
   694                           	opt stack 0
   695  00001C                     	ds	5
   696  000021                     I2C1_MasterWrite@trBlock:
   697                           	opt stack 0
   698  000021                     	ds	5
   699  000026                     _i2c1_tr_queue:
   700                           	opt stack 0
   701  000026                     	ds	5
   702  00002B                     I2C1_ISR@i2c_address:
   703                           	opt stack 0
   704  00002B                     	ds	2
   705                           tblptru	equ	0xFF8
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           
   709                           	psect	bssBANK0
   710  000060                     __pbssBANK0:
   711                           	opt stack 0
   712  000060                     _eusart1RxBuffer:
   713                           	opt stack 0
   714  000060                     	ds	32
   715  000080                     _eusart1TxBuffer:
   716                           	opt stack 0
   717  000080                     	ds	32
   718                           tblptru	equ	0xFF8
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           
   722                           	psect	cstackCOMRAM
   723  00002D                     __pcstackCOMRAM:
   724                           	opt stack 0
   725  00002D                     ??_I2C1_ISR:
   726  00002D                     
   727                           ; 1 bytes @ 0x0
   728  00002D                     	ds	2
   729  00002F                     ??_INTERRUPT_InterruptManager:
   730                           
   731                           ; 1 bytes @ 0x2
   732  00002F                     	ds	18
   733  000041                     EUSART1_Read@readValue:
   734                           	opt stack 0
   735  000041                     EUSART1_Write@txData:
   736                           	opt stack 0
   737  000041                     EUSART1_SetTxInterruptHandler@interruptHandler:
   738                           	opt stack 0
   739  000041                     EUSART1_SetRxInterruptHandler@interruptHandler:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x14
   743  000041                     	ds	1
   744  000042                     putch@txData:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x15
   748  000042                     	ds	1
   749  000043                     ?_printf:
   750                           	opt stack 0
   751  000043                     printf@f:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x16
   755  000043                     	ds	2
   756  000045                     printf@ap:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x18
   760  000045                     	ds	2
   761  000047                     printf@c:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x1A
   765  000047                     	ds	1
   766  000048                     Relay_Control@relay_selection:
   767                           	opt stack 0
   768  000048                     Power_Monitoring@power_selection:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x1B
   772  000048                     	ds	1
   773  000049                     main@selection:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x1C
   777  000049                     	ds	1
   778                           tblptru	equ	0xFF8
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 58 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  selection       1   28[COMRAM] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   801 ;;      Params:         0       0       0       0       0       0       0       0       0
   802 ;;      Locals:         1       0       0       0       0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0
   804 ;;      Totals:         1       0       0       0       0       0       0       0       0
   805 ;;Total ram usage:        1 bytes
   806 ;; Hardware stack levels required when called:    7
   807 ;; This function calls:
   808 ;;		_EUSART1_Read
   809 ;;		_EUSART1_Write
   810 ;;		_LED_Control
   811 ;;		_Power_Monitoring
   812 ;;		_Relay_Control
   813 ;;		_SYSTEM_Initialize
   814 ;;		_printf
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text0
   821  000310                     __ptext0:
   822                           	opt stack 0
   823  000310                     _main:
   824                           	opt stack 24
   825                           
   826                           ;main.c: 61: SYSTEM_Initialize();
   827                           
   828                           ;incstack = 0
   829  000310  ECB5  F003         	call	_SYSTEM_Initialize	;wreg free
   830                           
   831                           ;main.c: 68: (INTCONbits.GIE = 1);
   832  000314  8EF2               	bsf	intcon,7,c	;volatile
   833                           
   834                           ;main.c: 74: (INTCONbits.PEIE = 1);
   835  000316  8CF2               	bsf	intcon,6,c	;volatile
   836  000318                     
   837                           ;main.c: 80: {
   838                           ;main.c: 81: unsigned char selection = 0;
   839  000318  0E00               	movlw	0
   840  00031A  6E49               	movwf	main@selection,c
   841                           
   842                           ;main.c: 83: while(selection != 'x' && selection != 'X')
   843  00031C  D05B               	goto	l67
   844  00031E                     
   845                           ;main.c: 84: {
   846                           ;main.c: 85: printf("\n\nThis is the main menu.  Make a selection: \n");
   847  00031E  0E6D               	movlw	low STR_1
   848  000320  6E43               	movwf	printf@f,c
   849  000322  0E7E               	movlw	high STR_1
   850  000324  6E44               	movwf	printf@f+1,c
   851  000326  EC70  F003         	call	_printf	;wreg free
   852                           
   853                           ;main.c: 86: printf("1: LED Control\n");
   854  00032A  0ED3               	movlw	low STR_2
   855  00032C  6E43               	movwf	printf@f,c
   856  00032E  0E7F               	movlw	high STR_2
   857  000330  6E44               	movwf	printf@f+1,c
   858  000332  EC70  F003         	call	_printf	;wreg free
   859                           
   860                           ;main.c: 87: printf("2: Relay Control\n");
   861  000336  0EC1               	movlw	low STR_3
   862  000338  6E43               	movwf	printf@f,c
   863  00033A  0E7F               	movlw	high STR_3
   864  00033C  6E44               	movwf	printf@f+1,c
   865  00033E  EC70  F003         	call	_printf	;wreg free
   866                           
   867                           ;main.c: 88: printf("3: Board Power IC\n");
   868  000342  0EAE               	movlw	low STR_4
   869  000344  6E43               	movwf	printf@f,c
   870  000346  0E7F               	movlw	high STR_4
   871  000348  6E44               	movwf	printf@f+1,c
   872  00034A  EC70  F003         	call	_printf	;wreg free
   873                           
   874                           ;main.c: 89: printf("4: Battery Power IC\n");
   875  00034E  0E99               	movlw	low STR_5
   876  000350  6E43               	movwf	printf@f,c
   877  000352  0E7F               	movlw	high STR_5
   878  000354  6E44               	movwf	printf@f+1,c
   879  000356  EC70  F003         	call	_printf	;wreg free
   880                           
   881                           ;main.c: 91: printf("Selection:  ");
   882  00035A  0EF1               	movlw	low STR_6
   883  00035C  6E43               	movwf	printf@f,c
   884  00035E  0E7F               	movlw	high STR_6
   885  000360  6E44               	movwf	printf@f+1,c
   886  000362  EC70  F003         	call	_printf	;wreg free
   887                           
   888                           ;main.c: 93: selection = EUSART1_Read();
   889  000366  ECFA  F002         	call	_EUSART1_Read	;wreg free
   890  00036A  6E49               	movwf	main@selection,c
   891                           
   892                           ;main.c: 94: EUSART1_Write(selection);
   893  00036C  5049               	movf	main@selection,w,c
   894  00036E  ECDD  F002         	call	_EUSART1_Write
   895                           
   896                           ;main.c: 96: switch(selection)
   897  000372  D01C               	goto	l65
   898  000374                     
   899                           ;main.c: 99: {
   900                           ;main.c: 100: LED_Control();
   901  000374  EC98  F003         	call	_LED_Control	;wreg free
   902                           
   903                           ;main.c: 101: break;
   904  000378  D02D               	goto	l67
   905  00037A                     
   906                           ;main.c: 104: {
   907                           ;main.c: 105: Relay_Control();
   908  00037A  ECF3  F001         	call	_Relay_Control	;wreg free
   909                           
   910                           ;main.c: 106: break;
   911  00037E  D02A               	goto	l67
   912  000380                     
   913                           ;main.c: 109: {
   914                           ;main.c: 110: Power_Monitoring(10);
   915  000380  0E0A               	movlw	10
   916  000382  EC59  F002         	call	_Power_Monitoring
   917                           
   918                           ;main.c: 111: break;
   919  000386  D026               	goto	l67
   920  000388                     
   921                           ;main.c: 114: {
   922                           ;main.c: 115: Power_Monitoring(12);
   923  000388  0E0C               	movlw	12
   924  00038A  EC59  F002         	call	_Power_Monitoring
   925                           
   926                           ;main.c: 116: break;
   927  00038E  D022               	goto	l67
   928  000390                     
   929                           ;main.c: 119: case 'X':
   930                           ;main.c: 120: {
   931                           ;main.c: 121: printf("\n\nQuitting Application...");
   932  000390  0E0A               	movlw	low STR_7
   933  000392  6E43               	movwf	printf@f,c
   934  000394  0E7F               	movlw	high STR_7
   935  000396  6E44               	movwf	printf@f+1,c
   936  000398  EC70  F003         	call	_printf	;wreg free
   937                           
   938                           ;main.c: 122: break;
   939  00039C  D01B               	goto	l67
   940  00039E                     
   941                           ;main.c: 126: {
   942                           ;main.c: 127: printf("\n\nInvalid selection...");
   943  00039E  0E6C               	movlw	low STR_8
   944  0003A0  6E43               	movwf	printf@f,c
   945  0003A2  0E7F               	movlw	high STR_8
   946  0003A4  6E44               	movwf	printf@f+1,c
   947  0003A6  EC70  F003         	call	_printf	;wreg free
   948                           
   949                           ;main.c: 129: }
   950                           ;main.c: 130: }
   951                           
   952                           ;main.c: 128: break;
   953  0003AA  D014               	goto	l67
   954  0003AC                     l65:
   955  0003AC  5049               	movf	main@selection,w,c
   956                           
   957                           ; Switch size 1, requested type "space"
   958                           ; Number of cases is 6, Range of values is 49 to 120
   959                           ; switch strategies available:
   960                           ; Name         Instructions Cycles
   961                           ; simple_byte           19    10 (average)
   962                           ;	Chosen strategy is simple_byte
   963  0003AE  0A31               	xorlw	49	; case 49
   964  0003B0  B4D8               	btfsc	status,2,c
   965  0003B2  D7E0               	goto	l66
   966  0003B4  0A03               	xorlw	3	; case 50
   967  0003B6  B4D8               	btfsc	status,2,c
   968  0003B8  D7E0               	goto	l68
   969  0003BA  0A01               	xorlw	1	; case 51
   970  0003BC  B4D8               	btfsc	status,2,c
   971  0003BE  D7E0               	goto	l69
   972  0003C0  0A07               	xorlw	7	; case 52
   973  0003C2  B4D8               	btfsc	status,2,c
   974  0003C4  D7E1               	goto	l70
   975  0003C6  0A6C               	xorlw	108	; case 88
   976  0003C8  B4D8               	btfsc	status,2,c
   977  0003CA  D7E2               	goto	l71
   978  0003CC  0A20               	xorlw	32	; case 120
   979  0003CE  B4D8               	btfsc	status,2,c
   980  0003D0  D7DF               	goto	l71
   981  0003D2  D7E5               	goto	l73
   982  0003D4                     l67:
   983  0003D4  0E78               	movlw	120
   984  0003D6  1849               	xorwf	main@selection,w,c
   985  0003D8  B4D8               	btfsc	status,2,c
   986  0003DA  D79E               	goto	l62
   987  0003DC  0E58               	movlw	88
   988  0003DE  1849               	xorwf	main@selection,w,c
   989  0003E0  B4D8               	btfsc	status,2,c
   990  0003E2  D79A               	goto	l62
   991  0003E4  D79C               	goto	l64
   992  0003E6                     __end_of_main:
   993                           	opt stack 0
   994                           tblptru	equ	0xFF8
   995                           intcon	equ	0xFF2
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _SYSTEM_Initialize *****************
  1001 ;; Defined at:
  1002 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    5
  1023 ;; This function calls:
  1024 ;;		_EUSART1_Initialize
  1025 ;;		_I2C1_Initialize
  1026 ;;		_INTERRUPT_Initialize
  1027 ;;		_OSCILLATOR_Initialize
  1028 ;;		_PIN_MANAGER_Initialize
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text1
  1035  00076A                     __ptext1:
  1036                           	opt stack 0
  1037  00076A                     _SYSTEM_Initialize:
  1038                           	opt stack 25
  1039                           
  1040                           ;mcc.c: 53: INTERRUPT_Initialize();
  1041                           
  1042                           ;incstack = 0
  1043  00076A  ECE7  F003         	call	_INTERRUPT_Initialize	;wreg free
  1044                           
  1045                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1046  00076E  EC44  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1047                           
  1048                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1049  000772  ECC0  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1050                           
  1051                           ;mcc.c: 56: I2C1_Initialize();
  1052  000776  EC14  F003         	call	_I2C1_Initialize	;wreg free
  1053                           
  1054                           ;mcc.c: 57: EUSART1_Initialize();
  1055  00077A  ECB7  F002         	call	_EUSART1_Initialize	;wreg free
  1056  00077E  0012               	return		;funcret
  1057  000780                     __end_of_SYSTEM_Initialize:
  1058                           	opt stack 0
  1059                           tblptru	equ	0xFF8
  1060                           intcon	equ	0xFF2
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _PIN_MANAGER_Initialize *****************
  1066 ;; Defined at:
  1067 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    3
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_SYSTEM_Initialize
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text2
  1096  000688                     __ptext2:
  1097                           	opt stack 0
  1098  000688                     _PIN_MANAGER_Initialize:
  1099                           	opt stack 26
  1100                           
  1101                           ;pin_manager.c: 62: LATA = 0x00;
  1102                           
  1103                           ;incstack = 0
  1104  000688  0E00               	movlw	0
  1105  00068A  6E89               	movwf	3977,c	;volatile
  1106                           
  1107                           ;pin_manager.c: 63: LATB = 0x00;
  1108  00068C  0E00               	movlw	0
  1109  00068E  6E8A               	movwf	3978,c	;volatile
  1110                           
  1111                           ;pin_manager.c: 64: LATC = 0x00;
  1112  000690  0E00               	movlw	0
  1113  000692  6E8B               	movwf	3979,c	;volatile
  1114                           
  1115                           ;pin_manager.c: 69: TRISA = 0xFC;
  1116  000694  0EFC               	movlw	252
  1117  000696  6E92               	movwf	3986,c	;volatile
  1118                           
  1119                           ;pin_manager.c: 70: TRISB = 0xFF;
  1120  000698  6893               	setf	3987,c	;volatile
  1121                           
  1122                           ;pin_manager.c: 71: TRISC = 0x87;
  1123  00069A  0E87               	movlw	135
  1124  00069C  6E94               	movwf	3988,c	;volatile
  1125                           
  1126                           ;pin_manager.c: 76: ANSELC = 0x04;
  1127  00069E  0E04               	movlw	4
  1128  0006A0  010F               	movlb	15	; () banked
  1129  0006A2  6F5D               	movwf	93,b	;volatile
  1130                           
  1131                           ;pin_manager.c: 77: ANSELB = 0x30;
  1132  0006A4  0E30               	movlw	48
  1133  0006A6  6F5C               	movwf	92,b	;volatile
  1134                           
  1135                           ;pin_manager.c: 78: ANSELA = 0x2C;
  1136  0006A8  0E2C               	movlw	44
  1137  0006AA  6F5B               	movwf	91,b	;volatile
  1138                           
  1139                           ;pin_manager.c: 83: WPUB = 0x00;
  1140  0006AC  0E00               	movlw	0
  1141  0006AE  6E85               	movwf	3973,c	;volatile
  1142                           
  1143                           ; BSR set to: 15
  1144                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 1;
  1145  0006B0  8EF1               	bsf	intcon2,7,c	;volatile
  1146                           
  1147                           ; BSR set to: 15
  1148  0006B2  0012               	return		;funcret
  1149  0006B4                     __end_of_PIN_MANAGER_Initialize:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           intcon	equ	0xFF2
  1153                           intcon2	equ	0xFF1
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _OSCILLATOR_Initialize *****************
  1159 ;; Defined at:
  1160 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    3
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_SYSTEM_Initialize
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text3
  1189  000780                     __ptext3:
  1190                           	opt stack 0
  1191  000780                     _OSCILLATOR_Initialize:
  1192                           	opt stack 26
  1193                           
  1194                           ;mcc.c: 63: OSCCON = 0x70;
  1195                           
  1196                           ; BSR set to: 15
  1197                           ;incstack = 0
  1198  000780  0E70               	movlw	112
  1199  000782  6ED3               	movwf	4051,c	;volatile
  1200                           
  1201                           ;mcc.c: 65: OSCCON2 = 0x00;
  1202  000784  0E00               	movlw	0
  1203  000786  6ED2               	movwf	4050,c	;volatile
  1204                           
  1205                           ;mcc.c: 67: OSCTUNE = 0x80;
  1206  000788  0E80               	movlw	128
  1207  00078A  6E9B               	movwf	3995,c	;volatile
  1208                           
  1209                           ;mcc.c: 69: ACTCON = 0x00;
  1210  00078C  0E00               	movlw	0
  1211  00078E  6EB5               	movwf	4021,c	;volatile
  1212  000790                     
  1213                           ;mcc.c: 72: {
  1214  000790  BED2               	btfsc	4050,7,c	;volatile
  1215  000792  0012               	return	
  1216  000794  D7FD               	goto	l31
  1217  000796                     __end_of_OSCILLATOR_Initialize:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           intcon	equ	0xFF2
  1221                           intcon2	equ	0xFF1
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _INTERRUPT_Initialize *****************
  1227 ;; Defined at:
  1228 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		None
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_SYSTEM_Initialize
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text4
  1257  0007CE                     __ptext4:
  1258                           	opt stack 0
  1259  0007CE                     _INTERRUPT_Initialize:
  1260                           	opt stack 26
  1261                           
  1262                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1263                           
  1264                           ;incstack = 0
  1265  0007CE  9ED0               	bcf	4048,7,c	;volatile
  1266  0007D0  0012               	return		;funcret
  1267  0007D2                     __end_of_INTERRUPT_Initialize:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           intcon	equ	0xFF2
  1271                           intcon2	equ	0xFF1
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _I2C1_Initialize *****************
  1277 ;; Defined at:
  1278 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    3
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_SYSTEM_Initialize
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text5
  1307  000628                     __ptext5:
  1308                           	opt stack 0
  1309  000628                     _I2C1_Initialize:
  1310                           	opt stack 26
  1311                           
  1312                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  1313                           
  1314                           ;incstack = 0
  1315  000628  0E26               	movlw	low _i2c1_tr_queue
  1316  00062A  6E03               	movwf	_i2c1_object+2,c
  1317  00062C  0E00               	movlw	high _i2c1_tr_queue
  1318  00062E  6E04               	movwf	_i2c1_object+3,c
  1319                           
  1320                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  1321  000630  0E26               	movlw	low _i2c1_tr_queue
  1322  000632  6E01               	movwf	_i2c1_object,c
  1323  000634  0E00               	movlw	high _i2c1_tr_queue
  1324  000636  6E02               	movwf	_i2c1_object+1,c
  1325                           
  1326                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  1327  000638  8205               	bsf	_i2c1_object+4,1,c
  1328                           
  1329                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  1330  00063A  9005               	bcf	_i2c1_object+4,0,c
  1331                           
  1332                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  1333  00063C  0E00               	movlw	0
  1334  00063E  6E07               	movwf	_i2c1_object+6,c
  1335                           
  1336                           ;i2c1.c: 208: SSP1STAT = 0x00;
  1337  000640  0E00               	movlw	0
  1338  000642  6EC7               	movwf	4039,c	;volatile
  1339                           
  1340                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  1341  000644  0E28               	movlw	40
  1342  000646  6EC6               	movwf	4038,c	;volatile
  1343                           
  1344                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  1345  000648  0E00               	movlw	0
  1346  00064A  6ECB               	movwf	4043,c	;volatile
  1347                           
  1348                           ;i2c1.c: 214: SSP1ADD = 0x03;
  1349  00064C  0E03               	movlw	3
  1350  00064E  6EC8               	movwf	4040,c	;volatile
  1351                           
  1352                           ;i2c1.c: 217: PIR1bits.SSP1IF = 0;
  1353  000650  969E               	bcf	3998,3,c	;volatile
  1354                           
  1355                           ;i2c1.c: 218: PIR2bits.BCL1IF = 0;
  1356  000652  96A1               	bcf	4001,3,c	;volatile
  1357                           
  1358                           ;i2c1.c: 221: PIE1bits.SSP1IE = 1;
  1359  000654  869D               	bsf	3997,3,c	;volatile
  1360                           
  1361                           ;i2c1.c: 222: PIE2bits.BCL1IE = 1;
  1362  000656  86A0               	bsf	4000,3,c	;volatile
  1363  000658  0012               	return		;funcret
  1364  00065A                     __end_of_I2C1_Initialize:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           intcon	equ	0xFF2
  1368                           intcon2	equ	0xFF1
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _EUSART1_Initialize *****************
  1374 ;; Defined at:
  1375 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    4
  1396 ;; This function calls:
  1397 ;;		_EUSART1_SetRxInterruptHandler
  1398 ;;		_EUSART1_SetTxInterruptHandler
  1399 ;; This function is called by:
  1400 ;;		_SYSTEM_Initialize
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text6
  1405  00056E                     __ptext6:
  1406                           	opt stack 0
  1407  00056E                     _EUSART1_Initialize:
  1408                           	opt stack 25
  1409                           
  1410                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1411                           
  1412                           ;incstack = 0
  1413  00056E  9A9D               	bcf	3997,5,c	;volatile
  1414                           
  1415                           ;eusart1.c: 79: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  1416  000570  0EB4               	movlw	low _EUSART1_Receive_ISR
  1417  000572  6E41               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  1418  000574  0E06               	movlw	high _EUSART1_Receive_ISR
  1419  000576  6E42               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  1420  000578  ECD9  F003         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1421                           
  1422                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1423  00057C  989D               	bcf	3997,4,c	;volatile
  1424                           
  1425                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  1426  00057E  0E5A               	movlw	low _EUSART1_Transmit_ISR
  1427  000580  6E41               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  1428  000582  0E06               	movlw	high _EUSART1_Transmit_ISR
  1429  000584  6E42               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  1430  000586  ECD4  F003         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1431                           
  1432                           ;eusart1.c: 85: BAUDCON1 = 0x08;
  1433  00058A  0E08               	movlw	8
  1434  00058C  6EB8               	movwf	4024,c	;volatile
  1435                           
  1436                           ;eusart1.c: 88: RCSTA1 = 0x90;
  1437  00058E  0E90               	movlw	144
  1438  000590  6EAB               	movwf	4011,c	;volatile
  1439                           
  1440                           ;eusart1.c: 91: TXSTA1 = 0x24;
  1441  000592  0E24               	movlw	36
  1442  000594  6EAC               	movwf	4012,c	;volatile
  1443                           
  1444                           ;eusart1.c: 94: SPBRG1 = 0xCF;
  1445  000596  0ECF               	movlw	207
  1446  000598  6EAF               	movwf	4015,c	;volatile
  1447                           
  1448                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  1449  00059A  0E00               	movlw	0
  1450  00059C  6EB0               	movwf	4016,c	;volatile
  1451                           
  1452                           ;eusart1.c: 101: eusart1TxHead = 0;
  1453  00059E  0E00               	movlw	0
  1454  0005A0  6E17               	movwf	_eusart1TxHead,c	;volatile
  1455                           
  1456                           ;eusart1.c: 102: eusart1TxTail = 0;
  1457  0005A2  0E00               	movlw	0
  1458  0005A4  6E16               	movwf	_eusart1TxTail,c	;volatile
  1459                           
  1460                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1461  0005A6  0E20               	movlw	32
  1462  0005A8  6E15               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1463                           
  1464                           ;eusart1.c: 105: eusart1RxHead = 0;
  1465  0005AA  0E00               	movlw	0
  1466  0005AC  6E14               	movwf	_eusart1RxHead,c	;volatile
  1467                           
  1468                           ;eusart1.c: 106: eusart1RxTail = 0;
  1469  0005AE  0E00               	movlw	0
  1470  0005B0  6E13               	movwf	_eusart1RxTail,c	;volatile
  1471                           
  1472                           ;eusart1.c: 107: eusart1RxCount = 0;
  1473  0005B2  0E00               	movlw	0
  1474  0005B4  6E12               	movwf	_eusart1RxCount,c	;volatile
  1475                           
  1476                           ;eusart1.c: 110: PIE1bits.RC1IE = 1;
  1477  0005B6  8A9D               	bsf	3997,5,c	;volatile
  1478  0005B8  0012               	return		;funcret
  1479  0005BA                     __end_of_EUSART1_Initialize:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           intcon	equ	0xFF2
  1483                           intcon2	equ	0xFF1
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  1489 ;; Defined at:
  1490 ;;		line 220 in file "mcc_generated_files/eusart1.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  interruptHan    2   20[COMRAM] PTR FTN()void 
  1493 ;;		 -> EUSART1_Transmit_ISR(1), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1505 ;;      Params:         2       0       0       0       0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1508 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1509 ;;Total ram usage:        2 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    3
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_EUSART1_Initialize
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text7
  1520  0007A8                     __ptext7:
  1521                           	opt stack 0
  1522  0007A8                     _EUSART1_SetTxInterruptHandler:
  1523                           	opt stack 25
  1524                           
  1525                           ;eusart1.c: 221: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  1526                           
  1527                           ;incstack = 0
  1528  0007A8  C041  F010         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  1529  0007AC  C042  F011         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  1530  0007B0  0012               	return		;funcret
  1531  0007B2                     __end_of_EUSART1_SetTxInterruptHandler:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           intcon	equ	0xFF2
  1535                           intcon2	equ	0xFF1
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1541 ;; Defined at:
  1542 ;;		line 224 in file "mcc_generated_files/eusart1.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  interruptHan    2   20[COMRAM] PTR FTN()void 
  1545 ;;		 -> EUSART1_Receive_ISR(1), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1557 ;;      Params:         2       0       0       0       0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1560 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    3
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_EUSART1_Initialize
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text8
  1572  0007B2                     __ptext8:
  1573                           	opt stack 0
  1574  0007B2                     _EUSART1_SetRxInterruptHandler:
  1575                           	opt stack 25
  1576                           
  1577                           ;eusart1.c: 225: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  1578                           
  1579                           ;incstack = 0
  1580  0007B2  C041  F00E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  1581  0007B6  C042  F00F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  1582  0007BA  0012               	return		;funcret
  1583  0007BC                     __end_of_EUSART1_SetRxInterruptHandler:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           intcon	equ	0xFF2
  1587                           intcon2	equ	0xFF1
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _Relay_Control *****************
  1593 ;; Defined at:
  1594 ;;		line 159 in file "main.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  relay_select    1   27[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1608 ;;      Params:         0       0       0       0       0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1611 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1612 ;;Total ram usage:        1 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    6
  1615 ;; This function calls:
  1616 ;;		_EUSART1_Read
  1617 ;;		_Flush_EUSART
  1618 ;;		_printf
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text9
  1625  0003E6                     __ptext9:
  1626                           	opt stack 0
  1627  0003E6                     _Relay_Control:
  1628                           	opt stack 24
  1629                           
  1630                           ;main.c: 161: unsigned char relay_selection = 0;
  1631                           
  1632                           ;incstack = 0
  1633  0003E6  0E00               	movlw	0
  1634  0003E8  6E48               	movwf	Relay_Control@relay_selection,c
  1635                           
  1636                           ;main.c: 163: while(relay_selection != 'x' && relay_selection != 'X')
  1637  0003EA  D05A               	goto	l97
  1638  0003EC                     
  1639                           ;main.c: 164: {
  1640                           ;main.c: 165: printf("\n\nChoose the relay function\n");
  1641  0003EC  0EB8               	movlw	low STR_11
  1642  0003EE  6E43               	movwf	printf@f,c
  1643  0003F0  0E7E               	movlw	high STR_11
  1644  0003F2  6E44               	movwf	printf@f+1,c
  1645  0003F4  EC70  F003         	call	_printf	;wreg free
  1646                           
  1647                           ;main.c: 166: printf("1 = Board Power Relay Off\n");
  1648  0003F8  0ED5               	movlw	low STR_12
  1649  0003FA  6E43               	movwf	printf@f,c
  1650  0003FC  0E7E               	movlw	high STR_12
  1651  0003FE  6E44               	movwf	printf@f+1,c
  1652  000400  EC70  F003         	call	_printf	;wreg free
  1653                           
  1654                           ;main.c: 167: printf("2 = Board Power Relay On\n");
  1655  000404  0EF0               	movlw	low STR_13
  1656  000406  6E43               	movwf	printf@f,c
  1657  000408  0E7E               	movlw	high STR_13
  1658  00040A  6E44               	movwf	printf@f+1,c
  1659  00040C  EC70  F003         	call	_printf	;wreg free
  1660                           
  1661                           ;main.c: 168: printf("3 = Battery Relay Off\n");
  1662  000410  0E55               	movlw	low STR_14
  1663  000412  6E43               	movwf	printf@f,c
  1664  000414  0E7F               	movlw	high STR_14
  1665  000416  6E44               	movwf	printf@f+1,c
  1666  000418  EC70  F003         	call	_printf	;wreg free
  1667                           
  1668                           ;main.c: 169: printf("4 = Battery Relay On\n");
  1669  00041C  0E83               	movlw	low STR_15
  1670  00041E  6E43               	movwf	printf@f,c
  1671  000420  0E7F               	movlw	high STR_15
  1672  000422  6E44               	movwf	printf@f+1,c
  1673  000424  EC70  F003         	call	_printf	;wreg free
  1674                           
  1675                           ;main.c: 170: printf("X = Return to main menu\n");
  1676  000428  0E24               	movlw	low STR_16
  1677  00042A  6E43               	movwf	printf@f,c
  1678  00042C  0E7F               	movlw	high STR_16
  1679  00042E  6E44               	movwf	printf@f+1,c
  1680  000430  EC70  F003         	call	_printf	;wreg free
  1681                           
  1682                           ;main.c: 171: printf("\n\nSelection: ");
  1683  000434  0EE3               	movlw	low STR_17
  1684  000436  6E43               	movwf	printf@f,c
  1685  000438  0E7F               	movlw	high STR_17
  1686  00043A  6E44               	movwf	printf@f+1,c
  1687  00043C  EC70  F003         	call	_printf	;wreg free
  1688                           
  1689                           ;main.c: 173: relay_selection = EUSART1_Read();
  1690  000440  ECFA  F002         	call	_EUSART1_Read	;wreg free
  1691  000444  6E48               	movwf	Relay_Control@relay_selection,c
  1692                           
  1693                           ;main.c: 174: Flush_EUSART();
  1694  000446  ECCB  F003         	call	_Flush_EUSART	;wreg free
  1695                           
  1696                           ;main.c: 176: switch(relay_selection)
  1697  00044A  D016               	goto	l93
  1698  00044C                     
  1699                           ;main.c: 179: {
  1700                           ;main.c: 180: do { LATAbits.LATA0 = 0; } while(0);
  1701  00044C  9089               	bcf	3977,0,c	;volatile
  1702                           
  1703                           ;main.c: 181: break;
  1704  00044E  D028               	goto	l97
  1705  000450                     
  1706                           ;main.c: 184: {
  1707                           ;main.c: 185: do { LATAbits.LATA0 = 1; } while(0);
  1708  000450  8089               	bsf	3977,0,c	;volatile
  1709                           
  1710                           ;main.c: 186: break;
  1711  000452  D026               	goto	l97
  1712  000454                     
  1713                           ;main.c: 189: {
  1714                           ;main.c: 190: do { LATAbits.LATA1 = 0; } while(0);
  1715  000454  9289               	bcf	3977,1,c	;volatile
  1716                           
  1717                           ;main.c: 191: break;
  1718  000456  D024               	goto	l97
  1719  000458                     
  1720                           ;main.c: 194: {
  1721                           ;main.c: 195: do { LATAbits.LATA1 = 1; } while(0);
  1722  000458  8289               	bsf	3977,1,c	;volatile
  1723                           
  1724                           ;main.c: 196: break;
  1725  00045A  D022               	goto	l97
  1726  00045C                     
  1727                           ;main.c: 199: case 'X':
  1728                           ;main.c: 200: {
  1729                           ;main.c: 201: printf("\n\nReturning to main menu...\n");
  1730  00045C  0E9B               	movlw	low STR_18
  1731  00045E  6E43               	movwf	printf@f,c
  1732  000460  0E7E               	movlw	high STR_18
  1733  000462  6E44               	movwf	printf@f+1,c
  1734  000464  EC70  F003         	call	_printf	;wreg free
  1735                           
  1736                           ;main.c: 202: break;
  1737  000468  D01B               	goto	l97
  1738  00046A                     
  1739                           ;main.c: 206: {
  1740                           ;main.c: 207: printf("\n\nInvalid selection...");
  1741  00046A  0E6C               	movlw	low STR_8
  1742  00046C  6E43               	movwf	printf@f,c
  1743  00046E  0E7F               	movlw	high STR_8
  1744  000470  6E44               	movwf	printf@f+1,c
  1745  000472  EC70  F003         	call	_printf	;wreg free
  1746                           
  1747                           ;main.c: 209: }
  1748                           ;main.c: 210: }
  1749                           
  1750                           ;main.c: 208: break;
  1751  000476  D014               	goto	l97
  1752  000478                     l93:
  1753  000478  5048               	movf	Relay_Control@relay_selection,w,c
  1754                           
  1755                           ; Switch size 1, requested type "space"
  1756                           ; Number of cases is 6, Range of values is 49 to 120
  1757                           ; switch strategies available:
  1758                           ; Name         Instructions Cycles
  1759                           ; simple_byte           19    10 (average)
  1760                           ;	Chosen strategy is simple_byte
  1761  00047A  0A31               	xorlw	49	; case 49
  1762  00047C  B4D8               	btfsc	status,2,c
  1763  00047E  D7E6               	goto	l94
  1764  000480  0A03               	xorlw	3	; case 50
  1765  000482  B4D8               	btfsc	status,2,c
  1766  000484  D7E5               	goto	l98
  1767  000486  0A01               	xorlw	1	; case 51
  1768  000488  B4D8               	btfsc	status,2,c
  1769  00048A  D7E4               	goto	l101
  1770  00048C  0A07               	xorlw	7	; case 52
  1771  00048E  B4D8               	btfsc	status,2,c
  1772  000490  D7E3               	goto	l104
  1773  000492  0A6C               	xorlw	108	; case 88
  1774  000494  B4D8               	btfsc	status,2,c
  1775  000496  D7E2               	goto	l107
  1776  000498  0A20               	xorlw	32	; case 120
  1777  00049A  B4D8               	btfsc	status,2,c
  1778  00049C  D7DF               	goto	l107
  1779  00049E  D7E5               	goto	l109
  1780  0004A0                     l97:
  1781  0004A0  0E78               	movlw	120
  1782  0004A2  1848               	xorwf	Relay_Control@relay_selection,w,c
  1783  0004A4  B4D8               	btfsc	status,2,c
  1784  0004A6  0012               	return	
  1785  0004A8  0E58               	movlw	88
  1786  0004AA  1848               	xorwf	Relay_Control@relay_selection,w,c
  1787  0004AC  B4D8               	btfsc	status,2,c
  1788  0004AE  0012               	return	
  1789  0004B0  D79D               	goto	l92
  1790  0004B2                     __end_of_Relay_Control:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           intcon	equ	0xFF2
  1794                           intcon2	equ	0xFF1
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _Power_Monitoring *****************
  1800 ;; Defined at:
  1801 ;;		line 216 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  addr            1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  addr            1    0[COMRAM] unsigned char 
  1806 ;;  power_select    1   27[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1816 ;;      Params:         0       0       0       0       0       0       0       0       0
  1817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1819 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1820 ;;Total ram usage:        1 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    6
  1823 ;; This function calls:
  1824 ;;		_EUSART1_Read
  1825 ;;		_Flush_EUSART
  1826 ;;		_printf
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text10
  1833  0004B2                     __ptext10:
  1834                           	opt stack 0
  1835  0004B2                     _Power_Monitoring:
  1836                           	opt stack 24
  1837                           
  1838                           ;main.c: 218: unsigned char power_selection = 0;
  1839                           
  1840                           ;incstack = 0
  1841  0004B2  0E00               	movlw	0
  1842  0004B4  6E48               	movwf	Power_Monitoring@power_selection,c
  1843                           
  1844                           ;main.c: 220: while(power_selection != 'x' && power_selection != 'X')
  1845  0004B6  D052               	goto	l120
  1846  0004B8                     
  1847                           ;main.c: 221: {
  1848                           ;main.c: 222: printf("\n\nChoose the relay function\n");
  1849  0004B8  0EB8               	movlw	low STR_11
  1850  0004BA  6E43               	movwf	printf@f,c
  1851  0004BC  0E7E               	movlw	high STR_11
  1852  0004BE  6E44               	movwf	printf@f+1,c
  1853  0004C0  EC70  F003         	call	_printf	;wreg free
  1854                           
  1855                           ;main.c: 223: printf("1 = Board Power Relay Off\n");
  1856  0004C4  0ED5               	movlw	low STR_12
  1857  0004C6  6E43               	movwf	printf@f,c
  1858  0004C8  0E7E               	movlw	high STR_12
  1859  0004CA  6E44               	movwf	printf@f+1,c
  1860  0004CC  EC70  F003         	call	_printf	;wreg free
  1861                           
  1862                           ;main.c: 224: printf("2 = Board Power Relay On\n");
  1863  0004D0  0EF0               	movlw	low STR_13
  1864  0004D2  6E43               	movwf	printf@f,c
  1865  0004D4  0E7E               	movlw	high STR_13
  1866  0004D6  6E44               	movwf	printf@f+1,c
  1867  0004D8  EC70  F003         	call	_printf	;wreg free
  1868                           
  1869                           ;main.c: 225: printf("3 = Battery Relay Off\n");
  1870  0004DC  0E55               	movlw	low STR_14
  1871  0004DE  6E43               	movwf	printf@f,c
  1872  0004E0  0E7F               	movlw	high STR_14
  1873  0004E2  6E44               	movwf	printf@f+1,c
  1874  0004E4  EC70  F003         	call	_printf	;wreg free
  1875                           
  1876                           ;main.c: 226: printf("4 = Battery Relay On\n");
  1877  0004E8  0E83               	movlw	low STR_15
  1878  0004EA  6E43               	movwf	printf@f,c
  1879  0004EC  0E7F               	movlw	high STR_15
  1880  0004EE  6E44               	movwf	printf@f+1,c
  1881  0004F0  EC70  F003         	call	_printf	;wreg free
  1882                           
  1883                           ;main.c: 227: printf("X = Return to main menu\n");
  1884  0004F4  0E24               	movlw	low STR_16
  1885  0004F6  6E43               	movwf	printf@f,c
  1886  0004F8  0E7F               	movlw	high STR_16
  1887  0004FA  6E44               	movwf	printf@f+1,c
  1888  0004FC  EC70  F003         	call	_printf	;wreg free
  1889                           
  1890                           ;main.c: 228: printf("\n\nSelection: ");
  1891  000500  0EE3               	movlw	low STR_17
  1892  000502  6E43               	movwf	printf@f,c
  1893  000504  0E7F               	movlw	high STR_17
  1894  000506  6E44               	movwf	printf@f+1,c
  1895  000508  EC70  F003         	call	_printf	;wreg free
  1896                           
  1897                           ;main.c: 230: power_selection = EUSART1_Read();
  1898  00050C  ECFA  F002         	call	_EUSART1_Read	;wreg free
  1899  000510  6E48               	movwf	Power_Monitoring@power_selection,c
  1900                           
  1901                           ;main.c: 231: Flush_EUSART();
  1902  000512  ECCB  F003         	call	_Flush_EUSART	;wreg free
  1903                           
  1904                           ;main.c: 233: switch(power_selection)
  1905  000516  D00E               	goto	l118
  1906  000518                     
  1907                           ;main.c: 256: case 'X':
  1908                           ;main.c: 257: {
  1909                           ;main.c: 258: printf("\n\nReturning to main menu...\n");
  1910  000518  0E9B               	movlw	low STR_18
  1911  00051A  6E43               	movwf	printf@f,c
  1912  00051C  0E7E               	movlw	high STR_18
  1913  00051E  6E44               	movwf	printf@f+1,c
  1914  000520  EC70  F003         	call	_printf	;wreg free
  1915                           
  1916                           ;main.c: 259: break;
  1917  000524  D01B               	goto	l120
  1918  000526                     
  1919                           ;main.c: 263: {
  1920                           ;main.c: 264: printf("\n\nInvalid selection...");
  1921  000526  0E6C               	movlw	low STR_8
  1922  000528  6E43               	movwf	printf@f,c
  1923  00052A  0E7F               	movlw	high STR_8
  1924  00052C  6E44               	movwf	printf@f+1,c
  1925  00052E  EC70  F003         	call	_printf	;wreg free
  1926                           
  1927                           ;main.c: 266: }
  1928                           ;main.c: 267: }
  1929                           
  1930                           ;main.c: 265: break;
  1931  000532  D014               	goto	l120
  1932  000534                     l118:
  1933  000534  5048               	movf	Power_Monitoring@power_selection,w,c
  1934                           
  1935                           ; Switch size 1, requested type "space"
  1936                           ; Number of cases is 6, Range of values is 49 to 120
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte           19    10 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941  000536  0A31               	xorlw	49	; case 49
  1942  000538  B4D8               	btfsc	status,2,c
  1943  00053A  D010               	goto	l120
  1944  00053C  0A03               	xorlw	3	; case 50
  1945  00053E  B4D8               	btfsc	status,2,c
  1946  000540  D00D               	goto	l120
  1947  000542  0A01               	xorlw	1	; case 51
  1948  000544  B4D8               	btfsc	status,2,c
  1949  000546  D00A               	goto	l120
  1950  000548  0A07               	xorlw	7	; case 52
  1951  00054A  B4D8               	btfsc	status,2,c
  1952  00054C  D007               	goto	l120
  1953  00054E  0A6C               	xorlw	108	; case 88
  1954  000550  B4D8               	btfsc	status,2,c
  1955  000552  D7E2               	goto	l124
  1956  000554  0A20               	xorlw	32	; case 120
  1957  000556  B4D8               	btfsc	status,2,c
  1958  000558  D7DF               	goto	l124
  1959  00055A  D7E5               	goto	l126
  1960  00055C                     l120:
  1961  00055C  0E78               	movlw	120
  1962  00055E  1848               	xorwf	Power_Monitoring@power_selection,w,c
  1963  000560  B4D8               	btfsc	status,2,c
  1964  000562  0012               	return	
  1965  000564  0E58               	movlw	88
  1966  000566  1848               	xorwf	Power_Monitoring@power_selection,w,c
  1967  000568  B4D8               	btfsc	status,2,c
  1968  00056A  0012               	return	
  1969  00056C  D7A5               	goto	l117
  1970  00056E                     __end_of_Power_Monitoring:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           intcon	equ	0xFF2
  1974                           intcon2	equ	0xFF1
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _LED_Control *****************
  1980 ;; Defined at:
  1981 ;;		line 149 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    6
  2002 ;; This function calls:
  2003 ;;		_EUSART1_Read
  2004 ;;		_Flush_EUSART
  2005 ;;		_printf
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text11
  2012  000730                     __ptext11:
  2013                           	opt stack 0
  2014  000730                     _LED_Control:
  2015                           	opt stack 24
  2016                           
  2017                           ;main.c: 151: printf("\n\nIt would be really nice if there was an LED on the board...\n\
      +                          n");
  2018                           
  2019                           ;incstack = 0
  2020  000730  0E2D               	movlw	low STR_9
  2021  000732  6E43               	movwf	printf@f,c
  2022  000734  0E7E               	movlw	high STR_9
  2023  000736  6E44               	movwf	printf@f+1,c
  2024  000738  EC70  F003         	call	_printf	;wreg free
  2025                           
  2026                           ;main.c: 152: printf("Press any key to return");
  2027  00073C  0E3D               	movlw	low STR_10
  2028  00073E  6E43               	movwf	printf@f,c
  2029  000740  0E7F               	movlw	high STR_10
  2030  000742  6E44               	movwf	printf@f+1,c
  2031  000744  EC70  F003         	call	_printf	;wreg free
  2032                           
  2033                           ;main.c: 154: EUSART1_Read();
  2034  000748  ECFA  F002         	call	_EUSART1_Read	;wreg free
  2035                           
  2036                           ;main.c: 155: Flush_EUSART();
  2037  00074C  ECCB  F003         	call	_Flush_EUSART	;wreg free
  2038  000750  0012               	return		;funcret
  2039  000752                     __end_of_LED_Control:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           intcon	equ	0xFF2
  2043                           intcon2	equ	0xFF1
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _printf *****************
  2049 ;; Defined at:
  2050 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  f               2   22[COMRAM] PTR const unsigned char 
  2053 ;;		 -> STR_28(23), STR_27(29), STR_26(14), STR_25(25), 
  2054 ;;		 -> STR_24(22), STR_23(23), STR_22(26), STR_21(27), 
  2055 ;;		 -> STR_20(29), STR_19(23), STR_18(29), STR_17(14), 
  2056 ;;		 -> STR_16(25), STR_15(22), STR_14(23), STR_13(26), 
  2057 ;;		 -> STR_12(27), STR_11(29), STR_10(24), STR_9(64), 
  2058 ;;		 -> STR_8(23), STR_7(26), STR_6(13), STR_5(21), 
  2059 ;;		 -> STR_4(19), STR_3(18), STR_2(16), STR_1(46), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  tmpval          4    0        struct .
  2062 ;;  cp              3    0        PTR const unsigned char 
  2063 ;;  ap              2   24[COMRAM] PTR void [1]
  2064 ;;		 -> ?_printf(2), 
  2065 ;;  len             2    0        unsigned int 
  2066 ;;  val             2    0        unsigned int 
  2067 ;;  c               1   26[COMRAM] char 
  2068 ;;  flag            1    0        unsigned char 
  2069 ;;  prec            1    0        char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2   22[COMRAM] int 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2079 ;;      Params:         2       0       0       0       0       0       0       0       0
  2080 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2082 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2083 ;;Total ram usage:        5 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    5
  2086 ;; This function calls:
  2087 ;;		_putch
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;;		_LED_Control
  2091 ;;		_Relay_Control
  2092 ;;		_Power_Monitoring
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text12
  2097  0006E0                     __ptext12:
  2098                           	opt stack 0
  2099  0006E0                     _printf:
  2100                           	opt stack 25
  2101                           
  2102                           ;doprnt.c: 466: va_list ap;
  2103                           ;doprnt.c: 499: signed char c;
  2104                           ;doprnt.c: 506: signed char prec;
  2105                           ;doprnt.c: 508: unsigned char flag;
  2106                           ;doprnt.c: 523: union {
  2107                           ;doprnt.c: 524: unsigned long vd;
  2108                           ;doprnt.c: 525: double integ;
  2109                           ;doprnt.c: 526: } tmpval;
  2110                           ;doprnt.c: 528: unsigned int val;
  2111                           ;doprnt.c: 529: unsigned len;
  2112                           ;doprnt.c: 530: const char * cp;
  2113                           ;doprnt.c: 533: *ap = __va_start();
  2114                           
  2115                           ;incstack = 0
  2116  0006E0  0E45               	movlw	low (?_printf+2)
  2117  0006E2  6E45               	movwf	printf@ap,c
  2118  0006E4  0E00               	movlw	high (?_printf+2)
  2119  0006E6  6E46               	movwf	printf@ap+1,c
  2120                           
  2121                           ;doprnt.c: 536: while(c = *f++) {
  2122  0006E8  D003               	goto	l456
  2123  0006EA                     
  2124                           ;doprnt.c: 540: {
  2125                           ;doprnt.c: 541: (putch(c) );
  2126  0006EA  5047               	movf	printf@c,w,c
  2127  0006EC  ECDE  F003         	call	_putch
  2128  0006F0                     l456:
  2129  0006F0  C043  FFF6         	movff	printf@f,tblptrl
  2130  0006F4  C044  FFF7         	movff	printf@f+1,tblptrh
  2131  0006F8  4A43               	infsnz	printf@f,f,c
  2132  0006FA  2A44               	incf	printf@f+1,f,c
  2133  0006FC                     	if	0	;tblptru may be non-zero
  2134  0006FC                     	endif
  2135  0006FC                     	if	0	;tblptru may be non-zero
  2136  0006FC                     	endif
  2137  0006FC  0008               	tblrd		*
  2138  0006FE  CFF5 F047          	movff	tablat,printf@c
  2139  000702  5047               	movf	printf@c,w,c
  2140  000704  B4D8               	btfsc	status,2,c
  2141  000706  0012               	return	
  2142  000708  D7F0               	goto	l457
  2143  00070A                     __end_of_printf:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           intcon	equ	0xFF2
  2150                           intcon2	equ	0xFF1
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _putch *****************
  2156 ;; Defined at:
  2157 ;;		line 176 in file "mcc_generated_files/eusart1.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  txData          1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  txData          1   21[COMRAM] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0
  2172 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2174 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2175 ;;Total ram usage:        1 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    4
  2178 ;; This function calls:
  2179 ;;		_EUSART1_Write
  2180 ;; This function is called by:
  2181 ;;		_printf
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text13
  2186  0007BC                     __ptext13:
  2187                           	opt stack 0
  2188  0007BC                     _putch:
  2189                           	opt stack 25
  2190                           
  2191                           ;incstack = 0
  2192                           ;putch@txData stored from wreg
  2193  0007BC  6E42               	movwf	putch@txData,c
  2194                           
  2195                           ;eusart1.c: 178: EUSART1_Write(txData);
  2196  0007BE  5042               	movf	putch@txData,w,c
  2197  0007C0  ECDD  F002         	call	_EUSART1_Write
  2198  0007C4  0012               	return		;funcret
  2199  0007C6                     __end_of_putch:
  2200                           	opt stack 0
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           intcon	equ	0xFF2
  2206                           intcon2	equ	0xFF1
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           status	equ	0xFD8
  2210                           
  2211 ;; *************** function _EUSART1_Write *****************
  2212 ;; Defined at:
  2213 ;;		line 148 in file "mcc_generated_files/eusart1.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  txData          1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  txData          1   20[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0
  2228 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2230 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:        1 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    3
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;;		_putch
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text14
  2243  0005BA                     __ptext14:
  2244                           	opt stack 0
  2245  0005BA                     _EUSART1_Write:
  2246                           	opt stack 25
  2247                           
  2248                           ;incstack = 0
  2249                           ;EUSART1_Write@txData stored from wreg
  2250  0005BA  6E41               	movwf	EUSART1_Write@txData,c
  2251  0005BC                     
  2252                           ;eusart1.c: 151: {
  2253                           
  2254                           ;eusart1.c: 150: while(0 == eusart1TxBufferRemaining)
  2255  0005BC  5015               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  2256  0005BE  B4D8               	btfsc	status,2,c
  2257  0005C0  D7FD               	goto	l1559
  2258                           
  2259                           ;eusart1.c: 152: }
  2260                           ;eusart1.c: 154: if(0 == PIE1bits.TX1IE)
  2261  0005C2  B89D               	btfsc	3997,4,c	;volatile
  2262  0005C4  D003               	goto	l423
  2263                           
  2264                           ;eusart1.c: 155: {
  2265                           ;eusart1.c: 156: TXREG1 = txData;
  2266  0005C6  C041  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2267                           
  2268                           ;eusart1.c: 157: }
  2269  0005CA  D012               	goto	l424
  2270  0005CC                     l423:
  2271                           
  2272                           ;eusart1.c: 158: else
  2273                           ;eusart1.c: 159: {
  2274                           ;eusart1.c: 160: PIE1bits.TX1IE = 0;
  2275  0005CC  989D               	bcf	3997,4,c	;volatile
  2276                           
  2277                           ;eusart1.c: 161: eusart1TxBuffer[eusart1TxHead++] = txData;
  2278  0005CE  5017               	movf	_eusart1TxHead,w,c	;volatile
  2279  0005D0  0D01               	mullw	1
  2280  0005D2  0E80               	movlw	low _eusart1TxBuffer
  2281  0005D4  24F3               	addwf	prodl,w,c
  2282  0005D6  6ED9               	movwf	fsr2l,c
  2283  0005D8  0E00               	movlw	high _eusart1TxBuffer
  2284  0005DA  20F4               	addwfc	prodh,w,c
  2285  0005DC  6EDA               	movwf	fsr2h,c
  2286  0005DE  C041  FFDF         	movff	EUSART1_Write@txData,indf2
  2287  0005E2  2A17               	incf	_eusart1TxHead,f,c	;volatile
  2288                           
  2289                           ;eusart1.c: 162: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  2290  0005E4  0E1F               	movlw	31
  2291  0005E6  6417               	cpfsgt	_eusart1TxHead,c	;volatile
  2292  0005E8  D002               	goto	l425
  2293                           
  2294                           ;eusart1.c: 163: {
  2295                           ;eusart1.c: 164: eusart1TxHead = 0;
  2296  0005EA  0E00               	movlw	0
  2297  0005EC  6E17               	movwf	_eusart1TxHead,c	;volatile
  2298  0005EE                     l425:
  2299                           
  2300                           ;eusart1.c: 165: }
  2301                           ;eusart1.c: 166: eusart1TxBufferRemaining--;
  2302  0005EE  0615               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  2303  0005F0                     l424:
  2304                           
  2305                           ;eusart1.c: 167: }
  2306                           ;eusart1.c: 168: PIE1bits.TX1IE = 1;
  2307  0005F0  889D               	bsf	3997,4,c	;volatile
  2308  0005F2  0012               	return		;funcret
  2309  0005F4                     __end_of_EUSART1_Write:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           intcon2	equ	0xFF1
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           indf2	equ	0xFDF
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _Flush_EUSART *****************
  2327 ;; Defined at:
  2328 ;;		line 140 in file "main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		_EUSART1_Read
  2351 ;;		_EUSART1_is_rx_ready
  2352 ;; This function is called by:
  2353 ;;		_LED_Control
  2354 ;;		_Relay_Control
  2355 ;;		_Power_Monitoring
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text15
  2360  000796                     __ptext15:
  2361                           	opt stack 0
  2362  000796                     _Flush_EUSART:
  2363                           	opt stack 25
  2364                           
  2365                           ;main.c: 142: while(EUSART1_is_rx_ready())
  2366                           
  2367                           ;incstack = 0
  2368  000796  D002               	goto	l82
  2369  000798                     
  2370                           ;main.c: 143: {
  2371                           ;main.c: 144: EUSART1_Read();
  2372  000798  ECFA  F002         	call	_EUSART1_Read	;wreg free
  2373  00079C                     l82:
  2374  00079C  ECE9  F003         	call	_EUSART1_is_rx_ready	;wreg free
  2375  0007A0  0900               	iorlw	0
  2376  0007A2  B4D8               	btfsc	status,2,c
  2377  0007A4  0012               	return	
  2378  0007A6  D7F8               	goto	l83
  2379  0007A8                     __end_of_Flush_EUSART:
  2380                           	opt stack 0
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           prodh	equ	0xFF4
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           intcon2	equ	0xFF1
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           indf2	equ	0xFDF
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _EUSART1_is_rx_ready *****************
  2397 ;; Defined at:
  2398 ;;		line 118 in file "mcc_generated_files/eusart1.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      unsigned char 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    3
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_Flush_EUSART
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text16
  2427  0007D2                     __ptext16:
  2428                           	opt stack 0
  2429  0007D2                     _EUSART1_is_rx_ready:
  2430                           	opt stack 25
  2431                           
  2432                           ;eusart1.c: 120: return eusart1RxCount;
  2433                           
  2434                           ;incstack = 0
  2435  0007D2  5012               	movf	_eusart1RxCount,w,c	;volatile
  2436  0007D4  0012               	return	
  2437  0007D6                     __end_of_EUSART1_is_rx_ready:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           intcon2	equ	0xFF1
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           indf2	equ	0xFDF
  2450                           fsr2h	equ	0xFDA
  2451                           fsr2l	equ	0xFD9
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _EUSART1_Read *****************
  2455 ;; Defined at:
  2456 ;;		line 128 in file "mcc_generated_files/eusart1.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  readValue       1   20[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      unsigned char 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2473 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    3
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;;		_Flush_EUSART
  2482 ;;		_LED_Control
  2483 ;;		_Relay_Control
  2484 ;;		_Power_Monitoring
  2485 ;;		_getch
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text17
  2490  0005F4                     __ptext17:
  2491                           	opt stack 0
  2492  0005F4                     _EUSART1_Read:
  2493                           	opt stack 25
  2494                           
  2495                           ;eusart1.c: 130: uint8_t readValue = 0;
  2496                           
  2497                           ;incstack = 0
  2498  0005F4  0E00               	movlw	0
  2499  0005F6  6E41               	movwf	EUSART1_Read@readValue,c
  2500  0005F8                     
  2501                           ;eusart1.c: 133: {
  2502  0005F8  5012               	movf	_eusart1RxCount,w,c	;volatile
  2503  0005FA  B4D8               	btfsc	status,2,c
  2504  0005FC  D7FD               	goto	l414
  2505                           
  2506                           ;eusart1.c: 134: }
  2507                           ;eusart1.c: 136: readValue = eusart1RxBuffer[eusart1RxTail++];
  2508  0005FE  5013               	movf	_eusart1RxTail,w,c	;volatile
  2509  000600  0D01               	mullw	1
  2510  000602  0E60               	movlw	low _eusart1RxBuffer
  2511  000604  24F3               	addwf	prodl,w,c
  2512  000606  6ED9               	movwf	fsr2l,c
  2513  000608  0E00               	movlw	high _eusart1RxBuffer
  2514  00060A  20F4               	addwfc	prodh,w,c
  2515  00060C  6EDA               	movwf	fsr2h,c
  2516  00060E  50DF               	movf	indf2,w,c
  2517  000610  6E41               	movwf	EUSART1_Read@readValue,c
  2518  000612  2A13               	incf	_eusart1RxTail,f,c	;volatile
  2519                           
  2520                           ;eusart1.c: 137: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2521  000614  0E1F               	movlw	31
  2522  000616  6413               	cpfsgt	_eusart1RxTail,c	;volatile
  2523  000618  D002               	goto	l416
  2524                           
  2525                           ;eusart1.c: 138: {
  2526                           ;eusart1.c: 139: eusart1RxTail = 0;
  2527  00061A  0E00               	movlw	0
  2528  00061C  6E13               	movwf	_eusart1RxTail,c	;volatile
  2529  00061E                     l416:
  2530                           
  2531                           ;eusart1.c: 140: }
  2532                           ;eusart1.c: 141: PIE1bits.RC1IE = 0;
  2533  00061E  9A9D               	bcf	3997,5,c	;volatile
  2534                           
  2535                           ;eusart1.c: 142: eusart1RxCount--;
  2536  000620  0612               	decf	_eusart1RxCount,f,c	;volatile
  2537                           
  2538                           ;eusart1.c: 143: PIE1bits.RC1IE = 1;
  2539  000622  8A9D               	bsf	3997,5,c	;volatile
  2540                           
  2541                           ;eusart1.c: 145: return readValue;
  2542  000624  5041               	movf	EUSART1_Read@readValue,w,c
  2543  000626  0012               	return	
  2544  000628                     __end_of_EUSART1_Read:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodh	equ	0xFF4
  2551                           prodl	equ	0xFF3
  2552                           intcon	equ	0xFF2
  2553                           intcon2	equ	0xFF1
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           indf2	equ	0xFDF
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _INTERRUPT_InterruptManager *****************
  2562 ;; Defined at:
  2563 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2579 ;;      Temps:         18       0       0       0       0       0       0       0       0
  2580 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2581 ;;Total ram usage:       18 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    2
  2584 ;; This function calls:
  2585 ;;		Absolute function
  2586 ;;		_EUSART1_Receive_ISR
  2587 ;;		_EUSART1_Transmit_ISR
  2588 ;;		_I2C1_BusCollisionISR
  2589 ;;		_I2C1_ISR
  2590 ;; This function is called by:
  2591 ;;		Interrupt level 2
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	intcode
  2596  000008                     __pintcode:
  2597                           	opt stack 0
  2598  000008                     _INTERRUPT_InterruptManager:
  2599                           	opt stack 24
  2600                           
  2601                           ;incstack = 0
  2602  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2603  00000A  CFFA F02F          	movff	pclath,??_INTERRUPT_InterruptManager
  2604  00000E  CFFB F030          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2605  000012  CFE9 F031          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2606  000016  CFEA F032          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2607  00001A  CFE1 F033          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2608  00001E  CFE2 F034          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2609  000022  CFD9 F035          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2610  000026  CFDA F036          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2611  00002A  CFF3 F037          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2612  00002E  CFF4 F038          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2613  000032  CFF6 F039          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2614  000036  CFF7 F03A          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2615  00003A  CFF8 F03B          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2616  00003E  CFF5 F03C          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2617  000042  C04A  F03D         	movff	btemp,??_INTERRUPT_InterruptManager+14
  2618  000046  C04B  F03E         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  2619  00004A  C04C  F03F         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  2620  00004E  C04D  F040         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  2621                           
  2622                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  2623  000052  ACF2               	btfss	intcon,6,c	;volatile
  2624  000054  D026               	goto	i2u79_49
  2625                           
  2626                           ;interrupt_manager.c: 62: {
  2627                           ;interrupt_manager.c: 63: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  2628  000056  B6A0               	btfsc	4000,3,c	;volatile
  2629  000058  A6A1               	btfss	4001,3,c	;volatile
  2630  00005A  D003               	goto	i2l187
  2631                           
  2632                           ;interrupt_manager.c: 64: {
  2633                           ;interrupt_manager.c: 65: I2C1_BusCollisionISR();
  2634  00005C  ECEB  F003         	call	_I2C1_BusCollisionISR	;wreg free
  2635                           
  2636                           ;interrupt_manager.c: 66: }
  2637  000060  D020               	goto	i2u79_49
  2638  000062                     i2l187:
  2639                           
  2640                           ;interrupt_manager.c: 67: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  2641  000062  B69D               	btfsc	3997,3,c	;volatile
  2642  000064  A69E               	btfss	3998,3,c	;volatile
  2643  000066  D003               	goto	i2l189
  2644                           
  2645                           ;interrupt_manager.c: 68: {
  2646                           ;interrupt_manager.c: 69: I2C1_ISR();
  2647  000068  EC79  F000         	call	_I2C1_ISR	;wreg free
  2648                           
  2649                           ;interrupt_manager.c: 70: }
  2650  00006C  D01A               	goto	i2u79_49
  2651  00006E                     i2l189:
  2652                           
  2653                           ;interrupt_manager.c: 71: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2654  00006E  B89D               	btfsc	3997,4,c	;volatile
  2655  000070  A89E               	btfss	3998,4,c	;volatile
  2656  000072  D008               	goto	i2l191
  2657                           
  2658                           ;interrupt_manager.c: 72: {
  2659                           ;interrupt_manager.c: 73: EUSART1_TxDefaultInterruptHandler();
  2660  000074  D801               	call	i2u76_48
  2661  000076  D015               	goto	i2u79_49
  2662  000078                     i2u76_48:
  2663  000078  0005               	push	
  2664  00007A  6EFA               	movwf	pclath,c
  2665  00007C  5010               	movf	_EUSART1_TxDefaultInterruptHandler,w,c
  2666  00007E  6EFD               	movwf	tosl,c
  2667  000080  5011               	movf	_EUSART1_TxDefaultInterruptHandler+1,w,c
  2668  000082  D00A               	goto	L1
  2669  000084                     i2l191:
  2670                           
  2671                           ;interrupt_manager.c: 75: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2672  000084  BA9D               	btfsc	3997,5,c	;volatile
  2673  000086  AA9E               	btfss	3998,5,c	;volatile
  2674  000088  D00C               	goto	i2u79_49
  2675                           
  2676                           ;interrupt_manager.c: 76: {
  2677                           ;interrupt_manager.c: 77: EUSART1_RxDefaultInterruptHandler();
  2678  00008A  D801               	call	i2u79_48
  2679  00008C  D00A               	goto	i2u79_49
  2680  00008E                     i2u79_48:
  2681  00008E  0005               	push	
  2682  000090  6EFA               	movwf	pclath,c
  2683  000092  500E               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
  2684  000094  6EFD               	movwf	tosl,c
  2685  000096  500F               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
  2686  000098                     L1:
  2687  000098  6EFE               	movwf	tosh,c
  2688  00009A  50F8               	movf	tblptru,w,c
  2689  00009C  6EFF               	movwf	tosu,c
  2690  00009E  50FA               	movf	pclath,w,c
  2691  0000A0  0012               	return		;indir
  2692  0000A2                     i2u79_49:
  2693                           
  2694                           ;interrupt_manager.c: 84: else
  2695                           ;interrupt_manager.c: 85: {
  2696                           
  2697                           ;interrupt_manager.c: 82: }
  2698                           ;interrupt_manager.c: 83: }
  2699                           
  2700                           ;interrupt_manager.c: 79: else
  2701                           ;interrupt_manager.c: 80: {
  2702                           
  2703                           ;interrupt_manager.c: 78: }
  2704  0000A2  C040  F04D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  2705  0000A6  C03F  F04C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  2706  0000AA  C03E  F04B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  2707  0000AE  C03D  F04A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  2708  0000B2  C03C  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2709  0000B6  C03B  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2710  0000BA  C03A  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2711  0000BE  C039  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2712  0000C2  C038  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2713  0000C6  C037  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2714  0000CA  C036  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2715  0000CE  C035  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2716  0000D2  C034  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2717  0000D6  C033  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2718  0000DA  C032  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2719  0000DE  C031  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2720  0000E2  C030  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2721  0000E6  C02F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2722  0000EA  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2723  0000EC  0011               	retfie		f
  2724  0000EE                     __end_of_INTERRUPT_InterruptManager:
  2725                           	opt stack 0
  2726                           tosu	equ	0xFFF
  2727                           tosh	equ	0xFFE
  2728                           tosl	equ	0xFFD
  2729                           pclatu	equ	0xFFB
  2730                           pclath	equ	0xFFA
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon	equ	0xFF2
  2738                           intcon2	equ	0xFF1
  2739                           postinc0	equ	0xFEE
  2740                           fsr0h	equ	0xFEA
  2741                           fsr0l	equ	0xFE9
  2742                           wreg	equ	0xFE8
  2743                           fsr1h	equ	0xFE2
  2744                           fsr1l	equ	0xFE1
  2745                           indf2	equ	0xFDF
  2746                           fsr2h	equ	0xFDA
  2747                           fsr2l	equ	0xFD9
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _I2C1_ISR *****************
  2751 ;; Defined at:
  2752 ;;		line 235 in file "mcc_generated_files/i2c1.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2768 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2769 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2770 ;;Total ram usage:        2 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    1
  2773 ;; This function calls:
  2774 ;;		_I2C1_FunctionComplete
  2775 ;;		_I2C1_Stop
  2776 ;; This function is called by:
  2777 ;;		_INTERRUPT_InterruptManager
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text19
  2782  0000F2                     __ptext19:
  2783                           	opt stack 0
  2784  0000F2                     _I2C1_ISR:
  2785                           	opt stack 24
  2786                           
  2787                           ;i2c1.c: 238: static uint8_t *pi2c_buf_ptr;
  2788                           ;i2c1.c: 239: static uint16_t i2c_address = 0;
  2789                           ;i2c1.c: 240: static uint8_t i2c_bytes_left = 0;
  2790                           ;i2c1.c: 241: static uint8_t i2c_10bit_address_restart = 0;
  2791                           ;i2c1.c: 243: PIR1bits.SSP1IF = 0;
  2792                           
  2793                           ;incstack = 0
  2794  0000F2  969E               	bcf	3998,3,c	;volatile
  2795                           
  2796                           ;i2c1.c: 247: if(SSP1CON1bits.WCOL)
  2797  0000F4  AEC6               	btfss	4038,7,c	;volatile
  2798  0000F6  D0E9               	goto	i2l259
  2799                           
  2800                           ;i2c1.c: 248: {
  2801                           ;i2c1.c: 250: SSP1CON1bits.WCOL = 0;
  2802  0000F8  9EC6               	bcf	4038,7,c	;volatile
  2803                           
  2804                           ;i2c1.c: 252: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  2805  0000FA  0E00               	movlw	0
  2806  0000FC  6E1B               	movwf	_i2c1_state,c
  2807                           
  2808                           ;i2c1.c: 255: p_i2c1_current = (0);
  2809  0000FE  0E00               	movlw	0
  2810  000100  6E0A               	movwf	_p_i2c1_current,c
  2811  000102  0E00               	movlw	0
  2812  000104  6E0B               	movwf	_p_i2c1_current+1,c
  2813                           
  2814                           ;i2c1.c: 257: return;
  2815  000106  0012               	return	
  2816  000108                     i2l260:
  2817                           
  2818                           ;i2c1.c: 265: if(i2c1_object.trStatus.s.empty != 1)
  2819  000108  B205               	btfsc	_i2c1_object+4,1,c
  2820  00010A  0012               	return	
  2821                           
  2822                           ;i2c1.c: 266: {
  2823                           ;i2c1.c: 268: p_i2c1_current = i2c1_object.pTrHead;
  2824  00010C  C003  F00A         	movff	_i2c1_object+2,_p_i2c1_current
  2825  000110  C004  F00B         	movff	_i2c1_object+3,_p_i2c1_current+1
  2826                           
  2827                           ;i2c1.c: 269: i2c1_trb_count = i2c1_object.pTrHead->count;
  2828  000114  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  2829  000118  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  2830  00011C  50DF               	movf	indf2,w,c
  2831  00011E  6E1A               	movwf	_i2c1_trb_count,c
  2832                           
  2833                           ;i2c1.c: 270: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  2834  000120  EE20 F001          	lfsr	2,1
  2835  000124  5003               	movf	_i2c1_object+2,w,c
  2836  000126  26D9               	addwf	fsr2l,f,c
  2837  000128  5004               	movf	_i2c1_object+3,w,c
  2838  00012A  22DA               	addwfc	fsr2h,f,c
  2839  00012C  CFDE F00C          	movff	postinc2,_p_i2c1_trb_current
  2840  000130  CFDD F00D          	movff	postdec2,_p_i2c1_trb_current+1
  2841                           
  2842                           ;i2c1.c: 272: i2c1_object.pTrHead++;
  2843  000134  0E05               	movlw	5
  2844  000136  2603               	addwf	_i2c1_object+2,f,c
  2845  000138  0E00               	movlw	0
  2846  00013A  2204               	addwfc	_i2c1_object+3,f,c
  2847                           
  2848                           ;i2c1.c: 275: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  2849  00013C  0E2B               	movlw	low (_i2c1_tr_queue+5)
  2850  00013E  1803               	xorwf	_i2c1_object+2,w,c
  2851  000140  E108               	bnz	i2l1301
  2852  000142  0E00               	movlw	high (_i2c1_tr_queue+5)
  2853  000144  1804               	xorwf	_i2c1_object+3,w,c
  2854  000146  A4D8               	btfss	status,2,c
  2855  000148  D004               	goto	i2l262
  2856                           
  2857                           ;i2c1.c: 276: {
  2858                           ;i2c1.c: 278: i2c1_object.pTrHead = i2c1_tr_queue;
  2859  00014A  0E26               	movlw	low _i2c1_tr_queue
  2860  00014C  6E03               	movwf	_i2c1_object+2,c
  2861  00014E  0E00               	movlw	high _i2c1_tr_queue
  2862  000150  6E04               	movwf	_i2c1_object+3,c
  2863  000152                     i2l262:
  2864  000152                     i2l1301:
  2865                           
  2866                           ;i2c1.c: 279: }
  2867                           ;i2c1.c: 283: i2c1_object.trStatus.s.full = 0;
  2868  000152  9005               	bcf	_i2c1_object+4,0,c
  2869                           
  2870                           ;i2c1.c: 286: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  2871  000154  5001               	movf	_i2c1_object,w,c
  2872  000156  1803               	xorwf	_i2c1_object+2,w,c
  2873  000158  E104               	bnz	i2l263
  2874  00015A  5002               	movf	_i2c1_object+1,w,c
  2875  00015C  1804               	xorwf	_i2c1_object+3,w,c
  2876  00015E  B4D8               	btfsc	status,2,c
  2877                           
  2878                           ;i2c1.c: 287: {
  2879                           ;i2c1.c: 289: i2c1_object.trStatus.s.empty = 1;
  2880  000160  8205               	bsf	_i2c1_object+4,1,c
  2881  000162                     i2l263:
  2882                           
  2883                           ;i2c1.c: 290: }
  2884                           ;i2c1.c: 293: SSP1CON2bits.SEN = 1;
  2885  000162  80C5               	bsf	4037,0,c	;volatile
  2886                           
  2887                           ;i2c1.c: 296: i2c1_state = S_MASTER_SEND_ADDR;
  2888  000164  0E02               	movlw	2
  2889  000166  6E1B               	movwf	_i2c1_state,c
  2890                           
  2891                           ;i2c1.c: 297: }
  2892                           ;i2c1.c: 299: break;
  2893  000168  0012               	return	
  2894  00016A                     i2l265:
  2895                           
  2896                           ;i2c1.c: 306: SSP1CON2bits.RSEN = 1;
  2897  00016A  82C5               	bsf	4037,1,c	;volatile
  2898                           
  2899                           ;i2c1.c: 309: i2c1_state = S_MASTER_SEND_ADDR;
  2900  00016C  0E02               	movlw	2
  2901  00016E  6E1B               	movwf	_i2c1_state,c
  2902                           
  2903                           ;i2c1.c: 311: break;
  2904  000170  0012               	return	
  2905  000172                     i2l266:
  2906                           
  2907                           ;i2c1.c: 315: if(SSP1CON2bits.ACKSTAT)
  2908  000172  ACC5               	btfss	4037,6,c	;volatile
  2909  000174  D005               	goto	i2l267
  2910                           
  2911                           ;i2c1.c: 316: {
  2912                           ;i2c1.c: 317: i2c1_object.i2cErrors++;
  2913  000176  2A07               	incf	_i2c1_object+6,f,c
  2914                           
  2915                           ;i2c1.c: 318: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2916  000178  0E04               	movlw	4
  2917  00017A  ECE3  F003         	call	_I2C1_Stop
  2918                           
  2919                           ;i2c1.c: 319: }
  2920  00017E  0012               	return	
  2921  000180                     i2l267:
  2922                           
  2923                           ;i2c1.c: 320: else
  2924                           ;i2c1.c: 321: {
  2925                           ;i2c1.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  2926  000180  90D8               	bcf	status,0,c
  2927  000182  302C               	rrcf	I2C1_ISR@i2c_address+1,w,c
  2928  000184  6E2E               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2929  000186  302B               	rrcf	I2C1_ISR@i2c_address,w,c
  2930  000188  6E2D               	movwf	??_I2C1_ISR& (0+255),c
  2931  00018A  502D               	movf	??_I2C1_ISR,w,c
  2932  00018C  6EC9               	movwf	4041,c	;volatile
  2933                           
  2934                           ;i2c1.c: 326: if(i2c_address & 0x01)
  2935  00018E  A02B               	btfss	I2C1_ISR@i2c_address,0,c
  2936  000190  D003               	goto	i2l269
  2937                           
  2938                           ;i2c1.c: 327: {
  2939                           ;i2c1.c: 330: i2c1_state = S_MASTER_10BIT_RESTART;
  2940  000192  0E0B               	movlw	11
  2941  000194  6E1B               	movwf	_i2c1_state,c
  2942                           
  2943                           ;i2c1.c: 331: }
  2944  000196  0012               	return	
  2945  000198                     i2l269:
  2946                           
  2947                           ;i2c1.c: 332: else
  2948                           ;i2c1.c: 333: {
  2949                           ;i2c1.c: 335: i2c1_state = S_MASTER_SEND_DATA;
  2950  000198  0E03               	movlw	3
  2951  00019A  6E1B               	movwf	_i2c1_state,c
  2952                           
  2953                           ;i2c1.c: 336: }
  2954                           ;i2c1.c: 337: }
  2955                           ;i2c1.c: 339: break;
  2956  00019C  0012               	return	
  2957  00019E                     i2l271:
  2958                           
  2959                           ;i2c1.c: 343: if(SSP1CON2bits.ACKSTAT)
  2960  00019E  ACC5               	btfss	4037,6,c	;volatile
  2961  0001A0  D005               	goto	i2l272
  2962                           
  2963                           ;i2c1.c: 344: {
  2964                           ;i2c1.c: 345: i2c1_object.i2cErrors++;
  2965  0001A2  2A07               	incf	_i2c1_object+6,f,c
  2966                           
  2967                           ;i2c1.c: 346: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2968  0001A4  0E04               	movlw	4
  2969  0001A6  ECE3  F003         	call	_I2C1_Stop
  2970                           
  2971                           ;i2c1.c: 347: }
  2972  0001AA  0012               	return	
  2973  0001AC                     i2l272:
  2974                           
  2975                           ;i2c1.c: 348: else
  2976                           ;i2c1.c: 349: {
  2977                           ;i2c1.c: 352: SSP1CON2bits.RSEN = 1;
  2978  0001AC  82C5               	bsf	4037,1,c	;volatile
  2979                           
  2980                           ;i2c1.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2981  0001AE  C02B  F02D         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  2982  0001B2  C02C  F02E         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  2983  0001B6  C02E  F02D         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  2984  0001BA  6A2E               	clrf	??_I2C1_ISR+1,c
  2985  0001BC  0E06               	movlw	6
  2986  0001BE  162D               	andwf	??_I2C1_ISR,f,c
  2987  0001C0  0E00               	movlw	0
  2988  0001C2  162E               	andwf	??_I2C1_ISR+1,f,c
  2989  0001C4  0EF0               	movlw	240
  2990  0001C6  102D               	iorwf	??_I2C1_ISR,w,c
  2991  0001C8  6E2B               	movwf	I2C1_ISR@i2c_address,c
  2992  0001CA  502E               	movf	??_I2C1_ISR+1,w,c
  2993  0001CC  6E2C               	movwf	I2C1_ISR@i2c_address+1,c
  2994                           
  2995                           ;i2c1.c: 359: i2c_address |= 0x0001;
  2996  0001CE  802B               	bsf	I2C1_ISR@i2c_address,0,c
  2997                           
  2998                           ;i2c1.c: 362: i2c_10bit_address_restart = 1;
  2999  0001D0  0E01               	movlw	1
  3000  0001D2  6E18               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  3001                           
  3002                           ;i2c1.c: 365: i2c1_state = S_MASTER_SEND_ADDR;
  3003  0001D4  0E02               	movlw	2
  3004  0001D6  6E1B               	movwf	_i2c1_state,c
  3005                           
  3006                           ;i2c1.c: 366: }
  3007                           ;i2c1.c: 368: break;
  3008  0001D8  0012               	return	
  3009  0001DA                     
  3010                           ;i2c1.c: 383: if(i2c_10bit_address_restart != 1)
  3011  0001DA  0418               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  3012  0001DC  B4D8               	btfsc	status,2,c
  3013  0001DE  D01A               	goto	i2l276
  3014                           
  3015                           ;i2c1.c: 384: {
  3016                           ;i2c1.c: 386: i2c_address = p_i2c1_trb_current->address;
  3017  0001E0  C00C  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  3018  0001E4  C00D  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  3019  0001E8  CFDE F02B          	movff	postinc2,I2C1_ISR@i2c_address
  3020  0001EC  CFDD F02C          	movff	postdec2,I2C1_ISR@i2c_address+1
  3021                           
  3022                           ;i2c1.c: 387: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  3023  0001F0  EE20 F003          	lfsr	2,3
  3024  0001F4  500C               	movf	_p_i2c1_trb_current,w,c
  3025  0001F6  26D9               	addwf	fsr2l,f,c
  3026  0001F8  500D               	movf	_p_i2c1_trb_current+1,w,c
  3027  0001FA  22DA               	addwfc	fsr2h,f,c
  3028  0001FC  CFDE F008          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  3029  000200  CFDD F009          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  3030                           
  3031                           ;i2c1.c: 388: i2c_bytes_left = p_i2c1_trb_current->length;
  3032  000204  EE20 F002          	lfsr	2,2
  3033  000208  500C               	movf	_p_i2c1_trb_current,w,c
  3034  00020A  26D9               	addwf	fsr2l,f,c
  3035  00020C  500D               	movf	_p_i2c1_trb_current+1,w,c
  3036  00020E  22DA               	addwfc	fsr2h,f,c
  3037  000210  50DF               	movf	indf2,w,c
  3038  000212  6E19               	movwf	I2C1_ISR@i2c_bytes_left,c
  3039  000214                     i2l276:
  3040                           
  3041                           ;i2c1.c: 411: else
  3042                           ;i2c1.c: 412: {
  3043                           ;i2c1.c: 414: SSP1BUF = i2c_address;
  3044  000214  C02B  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  3045                           
  3046                           ;i2c1.c: 415: if(i2c_address & 0x01)
  3047  000218  A02B               	btfss	I2C1_ISR@i2c_address,0,c
  3048  00021A  D003               	goto	i2l280
  3049                           
  3050                           ;i2c1.c: 416: {
  3051                           ;i2c1.c: 418: i2c1_state = S_MASTER_ACK_ADDR;
  3052  00021C  0E05               	movlw	5
  3053  00021E  6E1B               	movwf	_i2c1_state,c
  3054                           
  3055                           ;i2c1.c: 419: }
  3056  000220  0012               	return	
  3057  000222                     i2l280:
  3058                           
  3059                           ;i2c1.c: 420: else
  3060                           ;i2c1.c: 421: {
  3061                           ;i2c1.c: 423: i2c1_state = S_MASTER_SEND_DATA;
  3062  000222  0E03               	movlw	3
  3063  000224  6E1B               	movwf	_i2c1_state,c
  3064                           
  3065                           ;i2c1.c: 424: }
  3066                           ;i2c1.c: 425: }
  3067                           ;i2c1.c: 426: break;
  3068  000226  0012               	return	
  3069  000228                     i2l282:
  3070                           
  3071                           ;i2c1.c: 431: if(SSP1CON2bits.ACKSTAT)
  3072  000228  ACC5               	btfss	4037,6,c	;volatile
  3073  00022A  D006               	goto	i2l283
  3074                           
  3075                           ;i2c1.c: 432: {
  3076                           ;i2c1.c: 434: i2c1_object.i2cErrors++;
  3077  00022C  2A07               	incf	_i2c1_object+6,f,c
  3078                           
  3079                           ;i2c1.c: 437: SSP1CON2bits.ACKSTAT = 0;
  3080  00022E  9CC5               	bcf	4037,6,c	;volatile
  3081                           
  3082                           ;i2c1.c: 440: I2C1_Stop(I2C1_DATA_NO_ACK);
  3083  000230  0E05               	movlw	5
  3084  000232  ECE3  F003         	call	_I2C1_Stop
  3085                           
  3086                           ;i2c1.c: 442: }
  3087  000236  0012               	return	
  3088  000238                     i2l283:
  3089                           
  3090                           ;i2c1.c: 443: else
  3091                           ;i2c1.c: 444: {
  3092                           ;i2c1.c: 446: if(i2c_bytes_left-- == 0U)
  3093  000238  0619               	decf	I2C1_ISR@i2c_bytes_left,f,c
  3094  00023A  2819               	incf	I2C1_ISR@i2c_bytes_left,w,c
  3095  00023C  A4D8               	btfss	status,2,c
  3096  00023E  D00E               	goto	i2l285
  3097                           
  3098                           ;i2c1.c: 447: {
  3099                           ;i2c1.c: 451: p_i2c1_trb_current++;
  3100  000240  0E05               	movlw	5
  3101  000242  260C               	addwf	_p_i2c1_trb_current,f,c
  3102  000244  0E00               	movlw	0
  3103  000246  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  3104                           
  3105                           ;i2c1.c: 454: if(--i2c1_trb_count == 0)
  3106  000248  2E1A               	decfsz	_i2c1_trb_count,f,c
  3107  00024A  D004               	goto	i2l286
  3108                           
  3109                           ;i2c1.c: 455: {
  3110                           ;i2c1.c: 456: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3111  00024C  0E00               	movlw	0
  3112  00024E  ECE3  F003         	call	_I2C1_Stop
  3113                           
  3114                           ;i2c1.c: 457: }
  3115  000252  0012               	return	
  3116  000254                     i2l286:
  3117                           
  3118                           ;i2c1.c: 458: else
  3119                           ;i2c1.c: 459: {
  3120                           ;i2c1.c: 466: SSP1CON2bits.RSEN = 1;
  3121  000254  82C5               	bsf	4037,1,c	;volatile
  3122                           
  3123                           ;i2c1.c: 469: i2c1_state = S_MASTER_SEND_ADDR;
  3124  000256  0E02               	movlw	2
  3125  000258  6E1B               	movwf	_i2c1_state,c
  3126                           
  3127                           ;i2c1.c: 471: }
  3128                           ;i2c1.c: 472: }
  3129  00025A  0012               	return	
  3130  00025C                     i2l285:
  3131                           
  3132                           ;i2c1.c: 473: else
  3133                           ;i2c1.c: 474: {
  3134                           ;i2c1.c: 476: SSP1BUF = *pi2c_buf_ptr++;
  3135  00025C  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  3136  000260  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  3137  000264  50DF               	movf	indf2,w,c
  3138  000266  6EC9               	movwf	4041,c	;volatile
  3139  000268  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  3140  00026A  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  3141                           
  3142                           ;i2c1.c: 477: }
  3143                           ;i2c1.c: 478: }
  3144                           ;i2c1.c: 479: break;
  3145  00026C  0012               	return	
  3146  00026E                     i2l289:
  3147                           
  3148                           ;i2c1.c: 484: if(SSP1CON2bits.ACKSTAT)
  3149  00026E  ACC5               	btfss	4037,6,c	;volatile
  3150  000270  D006               	goto	i2l290
  3151                           
  3152                           ;i2c1.c: 485: {
  3153                           ;i2c1.c: 488: i2c1_object.i2cErrors++;
  3154  000272  2A07               	incf	_i2c1_object+6,f,c
  3155                           
  3156                           ;i2c1.c: 491: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  3157  000274  0E04               	movlw	4
  3158  000276  ECE3  F003         	call	_I2C1_Stop
  3159                           
  3160                           ;i2c1.c: 494: SSP1CON2bits.ACKSTAT = 0;
  3161  00027A  9CC5               	bcf	4037,6,c	;volatile
  3162                           
  3163                           ;i2c1.c: 495: }
  3164  00027C  0012               	return	
  3165  00027E                     i2l290:
  3166                           
  3167                           ;i2c1.c: 496: else
  3168                           ;i2c1.c: 497: {
  3169                           ;i2c1.c: 498: SSP1CON2bits.RCEN = 1;
  3170  00027E  86C5               	bsf	4037,3,c	;volatile
  3171                           
  3172                           ;i2c1.c: 499: i2c1_state = S_MASTER_ACK_RCV_DATA;
  3173  000280  0E08               	movlw	8
  3174  000282  6E1B               	movwf	_i2c1_state,c
  3175                           
  3176                           ;i2c1.c: 500: }
  3177                           ;i2c1.c: 501: break;
  3178  000284  0012               	return	
  3179  000286                     
  3180                           ;i2c1.c: 508: i2c1_state = S_MASTER_ACK_RCV_DATA;
  3181  000286  0E08               	movlw	8
  3182  000288  6E1B               	movwf	_i2c1_state,c
  3183                           
  3184                           ;i2c1.c: 511: SSP1CON2bits.RCEN = 1;
  3185  00028A  86C5               	bsf	4037,3,c	;volatile
  3186                           
  3187                           ;i2c1.c: 513: break;
  3188  00028C  0012               	return	
  3189  00028E                     
  3190                           ;i2c1.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
  3191  00028E  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  3192  000292  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  3193  000296  CFC9 FFDF          	movff	4041,indf2	;volatile
  3194  00029A  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  3195  00029C  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  3196                           
  3197                           ;i2c1.c: 521: if(--i2c_bytes_left)
  3198  00029E  0E01               	movlw	1
  3199  0002A0  5E19               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  3200  0002A2  B4D8               	btfsc	status,2,c
  3201  0002A4  D004               	goto	i2l294
  3202                           
  3203                           ;i2c1.c: 522: {
  3204                           ;i2c1.c: 528: SSP1CON2bits.ACKDT = 0;
  3205  0002A6  9AC5               	bcf	4037,5,c	;volatile
  3206                           
  3207                           ;i2c1.c: 531: i2c1_state = S_MASTER_RCV_DATA;
  3208  0002A8  0E06               	movlw	6
  3209  0002AA  6E1B               	movwf	_i2c1_state,c
  3210                           
  3211                           ;i2c1.c: 532: }
  3212  0002AC  D003               	goto	i2l295
  3213  0002AE                     i2l294:
  3214                           
  3215                           ;i2c1.c: 533: else
  3216                           ;i2c1.c: 534: {
  3217                           ;i2c1.c: 538: SSP1CON2bits.ACKDT = 1;
  3218  0002AE  8AC5               	bsf	4037,5,c	;volatile
  3219                           
  3220                           ;i2c1.c: 540: I2C1_FunctionComplete();
  3221  0002B0  ECA9  F003         	call	_I2C1_FunctionComplete	;wreg free
  3222  0002B4                     i2l295:
  3223                           
  3224                           ;i2c1.c: 541: }
  3225                           ;i2c1.c: 544: SSP1CON2bits.ACKEN = 1;
  3226  0002B4  88C5               	bsf	4037,4,c	;volatile
  3227                           
  3228                           ;i2c1.c: 545: break;
  3229  0002B6  0012               	return	
  3230  0002B8                     
  3231                           ;i2c1.c: 548: case S_MASTER_SEND_STOP:
  3232                           ;i2c1.c: 551: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3233  0002B8  0E00               	movlw	0
  3234  0002BA  ECE3  F003         	call	_I2C1_Stop
  3235                           
  3236                           ;i2c1.c: 552: break;
  3237  0002BE  0012               	return	
  3238  0002C0                     
  3239                           ;i2c1.c: 558: i2c1_object.i2cErrors++;
  3240  0002C0  2A07               	incf	_i2c1_object+6,f,c
  3241                           
  3242                           ;i2c1.c: 559: I2C1_Stop(I2C1_LOST_STATE);
  3243  0002C2  0E06               	movlw	6
  3244  0002C4  ECE3  F003         	call	_I2C1_Stop
  3245                           
  3246                           ;i2c1.c: 562: }
  3247                           
  3248                           ;i2c1.c: 560: break;
  3249  0002C8  0012               	return	
  3250  0002CA                     i2l259:
  3251  0002CA  501B               	movf	_i2c1_state,w,c
  3252                           
  3253                           ; Switch size 1, requested type "space"
  3254                           ; Number of cases is 11, Range of values is 0 to 11
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte           34    18 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259  0002CC  0A00               	xorlw	0	; case 0
  3260  0002CE  B4D8               	btfsc	status,2,c
  3261  0002D0  D71B               	goto	i2l260
  3262  0002D2  0A01               	xorlw	1	; case 1
  3263  0002D4  B4D8               	btfsc	status,2,c
  3264  0002D6  D749               	goto	i2l265
  3265  0002D8  0A03               	xorlw	3	; case 2
  3266  0002DA  B4D8               	btfsc	status,2,c
  3267  0002DC  D77E               	goto	i2l274
  3268  0002DE  0A01               	xorlw	1	; case 3
  3269  0002E0  B4D8               	btfsc	status,2,c
  3270  0002E2  D7A2               	goto	i2l282
  3271  0002E4  0A07               	xorlw	7	; case 4
  3272  0002E6  B4D8               	btfsc	status,2,c
  3273  0002E8  D7E7               	goto	i2l296
  3274  0002EA  0A01               	xorlw	1	; case 5
  3275  0002EC  B4D8               	btfsc	status,2,c
  3276  0002EE  D7BF               	goto	i2l289
  3277  0002F0  0A03               	xorlw	3	; case 6
  3278  0002F2  B4D8               	btfsc	status,2,c
  3279  0002F4  D7C8               	goto	i2l292
  3280  0002F6  0A01               	xorlw	1	; case 7
  3281  0002F8  B4D8               	btfsc	status,2,c
  3282  0002FA  D7DE               	goto	i2l296
  3283  0002FC  0A0F               	xorlw	15	; case 8
  3284  0002FE  B4D8               	btfsc	status,2,c
  3285  000300  D7C6               	goto	i2l293
  3286  000302  0A02               	xorlw	2	; case 10
  3287  000304  B4D8               	btfsc	status,2,c
  3288  000306  D735               	goto	i2l266
  3289  000308  0A01               	xorlw	1	; case 11
  3290  00030A  B4D8               	btfsc	status,2,c
  3291  00030C  D748               	goto	i2l271
  3292  00030E  D7D8               	goto	i2l298
  3293  000310                     __end_of_I2C1_ISR:
  3294                           	opt stack 0
  3295                           tosu	equ	0xFFF
  3296                           tosh	equ	0xFFE
  3297                           tosl	equ	0xFFD
  3298                           pclatu	equ	0xFFB
  3299                           pclath	equ	0xFFA
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           intcon2	equ	0xFF1
  3308                           postinc0	equ	0xFEE
  3309                           fsr0h	equ	0xFEA
  3310                           fsr0l	equ	0xFE9
  3311                           wreg	equ	0xFE8
  3312                           fsr1h	equ	0xFE2
  3313                           fsr1l	equ	0xFE1
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           postdec2	equ	0xFDD
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function _I2C1_Stop *****************
  3322 ;; Defined at:
  3323 ;;		line 583 in file "mcc_generated_files/i2c1.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  completion_c    1    wreg     enum E5439
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  completion_c    1    0[COMRAM] enum E5439
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_I2C1_ISR
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text20
  3351  0007C6                     __ptext20:
  3352                           	opt stack 0
  3353  0007C6                     _I2C1_Stop:
  3354                           	opt stack 24
  3355                           
  3356                           ;i2c1.c: 586: SSP1CON2bits.PEN = 1;
  3357                           
  3358                           ;incstack = 0
  3359  0007C6  84C5               	bsf	4037,2,c	;volatile
  3360                           
  3361                           ;i2c1.c: 593: }
  3362                           ;i2c1.c: 596: i2c1_state = S_MASTER_IDLE;
  3363  0007C8  0E00               	movlw	0
  3364  0007CA  6E1B               	movwf	_i2c1_state,c
  3365  0007CC  0012               	return		;funcret
  3366  0007CE                     __end_of_I2C1_Stop:
  3367                           	opt stack 0
  3368                           tosu	equ	0xFFF
  3369                           tosh	equ	0xFFE
  3370                           tosl	equ	0xFFD
  3371                           pclatu	equ	0xFFB
  3372                           pclath	equ	0xFFA
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           intcon	equ	0xFF2
  3380                           intcon2	equ	0xFF1
  3381                           postinc0	equ	0xFEE
  3382                           fsr0h	equ	0xFEA
  3383                           fsr0l	equ	0xFE9
  3384                           wreg	equ	0xFE8
  3385                           fsr1h	equ	0xFE2
  3386                           fsr1l	equ	0xFE1
  3387                           indf2	equ	0xFDF
  3388                           postinc2	equ	0xFDE
  3389                           postdec2	equ	0xFDD
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function _I2C1_FunctionComplete *****************
  3395 ;; Defined at:
  3396 ;;		line 565 in file "mcc_generated_files/i2c1.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_I2C1_ISR
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text21
  3424  000752                     __ptext21:
  3425                           	opt stack 0
  3426  000752                     _I2C1_FunctionComplete:
  3427                           	opt stack 24
  3428                           
  3429                           ;i2c1.c: 569: p_i2c1_trb_current++;
  3430                           
  3431                           ;incstack = 0
  3432  000752  0E05               	movlw	5
  3433  000754  260C               	addwf	_p_i2c1_trb_current,f,c
  3434  000756  0E00               	movlw	0
  3435  000758  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  3436                           
  3437                           ;i2c1.c: 572: if(--i2c1_trb_count == 0)
  3438  00075A  2E1A               	decfsz	_i2c1_trb_count,f,c
  3439  00075C  D003               	goto	i2l301
  3440                           
  3441                           ;i2c1.c: 573: {
  3442                           ;i2c1.c: 574: i2c1_state = S_MASTER_SEND_STOP;
  3443  00075E  0E04               	movlw	4
  3444  000760  6E1B               	movwf	_i2c1_state,c
  3445                           
  3446                           ;i2c1.c: 575: }
  3447  000762  0012               	return	
  3448  000764                     i2l301:
  3449                           
  3450                           ;i2c1.c: 576: else
  3451                           ;i2c1.c: 577: {
  3452                           ;i2c1.c: 578: i2c1_state = S_MASTER_RESTART;
  3453  000764  0E01               	movlw	1
  3454  000766  6E1B               	movwf	_i2c1_state,c
  3455  000768  0012               	return	
  3456  00076A                     __end_of_I2C1_FunctionComplete:
  3457                           	opt stack 0
  3458                           tosu	equ	0xFFF
  3459                           tosh	equ	0xFFE
  3460                           tosl	equ	0xFFD
  3461                           pclatu	equ	0xFFB
  3462                           pclath	equ	0xFFA
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           prodh	equ	0xFF4
  3468                           prodl	equ	0xFF3
  3469                           intcon	equ	0xFF2
  3470                           intcon2	equ	0xFF1
  3471                           postinc0	equ	0xFEE
  3472                           fsr0h	equ	0xFEA
  3473                           fsr0l	equ	0xFE9
  3474                           wreg	equ	0xFE8
  3475                           fsr1h	equ	0xFE2
  3476                           fsr1l	equ	0xFE1
  3477                           indf2	equ	0xFDF
  3478                           postinc2	equ	0xFDE
  3479                           postdec2	equ	0xFDD
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _I2C1_BusCollisionISR *****************
  3485 ;; Defined at:
  3486 ;;		line 742 in file "mcc_generated_files/i2c1.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		None
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3500 ;;      Params:         0       0       0       0       0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_INTERRUPT_InterruptManager
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text22
  3514  0007D6                     __ptext22:
  3515                           	opt stack 0
  3516  0007D6                     _I2C1_BusCollisionISR:
  3517                           	opt stack 25
  3518                           
  3519                           ;i2c1.c: 745: PIR2bits.BCL1IF = 0;
  3520                           
  3521                           ;incstack = 0
  3522  0007D6  96A1               	bcf	4001,3,c	;volatile
  3523  0007D8  0012               	return		;funcret
  3524  0007DA                     __end_of_I2C1_BusCollisionISR:
  3525                           	opt stack 0
  3526                           tosu	equ	0xFFF
  3527                           tosh	equ	0xFFE
  3528                           tosl	equ	0xFFD
  3529                           pclatu	equ	0xFFB
  3530                           pclath	equ	0xFFA
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           intcon2	equ	0xFF1
  3539                           postinc0	equ	0xFEE
  3540                           fsr0h	equ	0xFEA
  3541                           fsr0l	equ	0xFE9
  3542                           wreg	equ	0xFE8
  3543                           fsr1h	equ	0xFE2
  3544                           fsr1l	equ	0xFE1
  3545                           indf2	equ	0xFDF
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _EUSART1_Transmit_ISR *****************
  3553 ;; Defined at:
  3554 ;;		line 181 in file "mcc_generated_files/eusart1.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_EUSART1_Initialize
  3578 ;;		_INTERRUPT_InterruptManager
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text23
  3583  00065A                     __ptext23:
  3584                           	opt stack 0
  3585  00065A                     _EUSART1_Transmit_ISR:
  3586                           	opt stack 25
  3587                           
  3588                           ;eusart1.c: 185: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3589                           
  3590                           ;incstack = 0
  3591  00065A  0E20               	movlw	32
  3592  00065C  6015               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3593  00065E  D012               	goto	i2l435
  3594                           
  3595                           ;eusart1.c: 186: {
  3596                           ;eusart1.c: 187: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  3597  000660  5016               	movf	_eusart1TxTail,w,c	;volatile
  3598  000662  0D01               	mullw	1
  3599  000664  0E80               	movlw	low _eusart1TxBuffer
  3600  000666  24F3               	addwf	prodl,w,c
  3601  000668  6ED9               	movwf	fsr2l,c
  3602  00066A  0E00               	movlw	high _eusart1TxBuffer
  3603  00066C  20F4               	addwfc	prodh,w,c
  3604  00066E  6EDA               	movwf	fsr2h,c
  3605  000670  50DF               	movf	indf2,w,c
  3606  000672  6EAD               	movwf	4013,c	;volatile
  3607  000674  2A16               	incf	_eusart1TxTail,f,c	;volatile
  3608                           
  3609                           ;eusart1.c: 188: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3610  000676  0E1F               	movlw	31
  3611  000678  6416               	cpfsgt	_eusart1TxTail,c	;volatile
  3612  00067A  D002               	goto	i2l436
  3613                           
  3614                           ;eusart1.c: 189: {
  3615                           ;eusart1.c: 190: eusart1TxTail = 0;
  3616  00067C  0E00               	movlw	0
  3617  00067E  6E16               	movwf	_eusart1TxTail,c	;volatile
  3618  000680                     i2l436:
  3619                           
  3620                           ;eusart1.c: 191: }
  3621                           ;eusart1.c: 192: eusart1TxBufferRemaining++;
  3622  000680  2A15               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3623                           
  3624                           ;eusart1.c: 193: }
  3625  000682  0012               	return	
  3626  000684                     i2l435:
  3627                           
  3628                           ;eusart1.c: 194: else
  3629                           ;eusart1.c: 195: {
  3630                           ;eusart1.c: 196: PIE1bits.TX1IE = 0;
  3631  000684  989D               	bcf	3997,4,c	;volatile
  3632  000686  0012               	return	
  3633  000688                     __end_of_EUSART1_Transmit_ISR:
  3634                           	opt stack 0
  3635                           tosu	equ	0xFFF
  3636                           tosh	equ	0xFFE
  3637                           tosl	equ	0xFFD
  3638                           pclatu	equ	0xFFB
  3639                           pclath	equ	0xFFA
  3640                           tblptru	equ	0xFF8
  3641                           tblptrh	equ	0xFF7
  3642                           tblptrl	equ	0xFF6
  3643                           tablat	equ	0xFF5
  3644                           prodh	equ	0xFF4
  3645                           prodl	equ	0xFF3
  3646                           intcon	equ	0xFF2
  3647                           intcon2	equ	0xFF1
  3648                           postinc0	equ	0xFEE
  3649                           fsr0h	equ	0xFEA
  3650                           fsr0l	equ	0xFE9
  3651                           wreg	equ	0xFE8
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           postdec2	equ	0xFDD
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _EUSART1_Receive_ISR *****************
  3662 ;; Defined at:
  3663 ;;		line 200 in file "mcc_generated_files/eusart1.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_EUSART1_Initialize
  3687 ;;		_INTERRUPT_InterruptManager
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text24
  3692  0006B4                     __ptext24:
  3693                           	opt stack 0
  3694  0006B4                     _EUSART1_Receive_ISR:
  3695                           	opt stack 25
  3696                           
  3697                           ;eusart1.c: 203: if(1 == RCSTA1bits.OERR)
  3698                           
  3699                           ;incstack = 0
  3700  0006B4  A2AB               	btfss	4011,1,c	;volatile
  3701  0006B6  D002               	goto	i2l441
  3702                           
  3703                           ;eusart1.c: 204: {
  3704                           ;eusart1.c: 207: RCSTA1bits.CREN = 0;
  3705  0006B8  98AB               	bcf	4011,4,c	;volatile
  3706                           
  3707                           ;eusart1.c: 208: RCSTA1bits.CREN = 1;
  3708  0006BA  88AB               	bsf	4011,4,c	;volatile
  3709  0006BC                     i2l441:
  3710                           
  3711                           ;eusart1.c: 209: }
  3712                           ;eusart1.c: 212: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3713  0006BC  5014               	movf	_eusart1RxHead,w,c	;volatile
  3714  0006BE  0D01               	mullw	1
  3715  0006C0  0E60               	movlw	low _eusart1RxBuffer
  3716  0006C2  24F3               	addwf	prodl,w,c
  3717  0006C4  6ED9               	movwf	fsr2l,c
  3718  0006C6  0E00               	movlw	high _eusart1RxBuffer
  3719  0006C8  20F4               	addwfc	prodh,w,c
  3720  0006CA  6EDA               	movwf	fsr2h,c
  3721  0006CC  CFAE FFDF          	movff	4014,indf2	;volatile
  3722  0006D0  2A14               	incf	_eusart1RxHead,f,c	;volatile
  3723                           
  3724                           ;eusart1.c: 213: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3725  0006D2  0E1F               	movlw	31
  3726  0006D4  6414               	cpfsgt	_eusart1RxHead,c	;volatile
  3727  0006D6  D002               	goto	i2l442
  3728                           
  3729                           ;eusart1.c: 214: {
  3730                           ;eusart1.c: 215: eusart1RxHead = 0;
  3731  0006D8  0E00               	movlw	0
  3732  0006DA  6E14               	movwf	_eusart1RxHead,c	;volatile
  3733  0006DC                     i2l442:
  3734                           
  3735                           ;eusart1.c: 216: }
  3736                           ;eusart1.c: 217: eusart1RxCount++;
  3737  0006DC  2A12               	incf	_eusart1RxCount,f,c	;volatile
  3738  0006DE  0012               	return		;funcret
  3739  0006E0                     __end_of_EUSART1_Receive_ISR:
  3740                           	opt stack 0
  3741                           tosu	equ	0xFFF
  3742                           tosh	equ	0xFFE
  3743                           tosl	equ	0xFFD
  3744                           pclatu	equ	0xFFB
  3745                           pclath	equ	0xFFA
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           prodh	equ	0xFF4
  3751                           prodl	equ	0xFF3
  3752                           intcon	equ	0xFF2
  3753                           intcon2	equ	0xFF1
  3754                           postinc0	equ	0xFEE
  3755                           fsr0h	equ	0xFEA
  3756                           fsr0l	equ	0xFE9
  3757                           wreg	equ	0xFE8
  3758                           fsr1h	equ	0xFE2
  3759                           fsr1l	equ	0xFE1
  3760                           indf2	equ	0xFDF
  3761                           postinc2	equ	0xFDE
  3762                           postdec2	equ	0xFDD
  3763                           fsr2h	equ	0xFDA
  3764                           fsr2l	equ	0xFD9
  3765                           status	equ	0xFD8
  3766                           tosu	equ	0xFFF
  3767                           tosh	equ	0xFFE
  3768                           tosl	equ	0xFFD
  3769                           pclatu	equ	0xFFB
  3770                           pclath	equ	0xFFA
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           prodh	equ	0xFF4
  3776                           prodl	equ	0xFF3
  3777                           intcon	equ	0xFF2
  3778                           intcon2	equ	0xFF1
  3779                           postinc0	equ	0xFEE
  3780                           fsr0h	equ	0xFEA
  3781                           fsr0l	equ	0xFE9
  3782                           wreg	equ	0xFE8
  3783                           fsr1h	equ	0xFE2
  3784                           fsr1l	equ	0xFE1
  3785                           indf2	equ	0xFDF
  3786                           postinc2	equ	0xFDE
  3787                           postdec2	equ	0xFDD
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           
  3792                           	psect	text25
  3793  000000                     __ptext25:
  3794                           	opt stack 0
  3795                           tosu	equ	0xFFF
  3796                           tosh	equ	0xFFE
  3797                           tosl	equ	0xFFD
  3798                           pclatu	equ	0xFFB
  3799                           pclath	equ	0xFFA
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           intcon2	equ	0xFF1
  3808                           postinc0	equ	0xFEE
  3809                           fsr0h	equ	0xFEA
  3810                           fsr0l	equ	0xFE9
  3811                           wreg	equ	0xFE8
  3812                           fsr1h	equ	0xFE2
  3813                           fsr1l	equ	0xFE1
  3814                           indf2	equ	0xFDF
  3815                           postinc2	equ	0xFDE
  3816                           postdec2	equ	0xFDD
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           status	equ	0xFD8
  3820                           
  3821                           	psect	rparam
  3822  0000                     tosu	equ	0xFFF
  3823                           tosh	equ	0xFFE
  3824                           tosl	equ	0xFFD
  3825                           pclatu	equ	0xFFB
  3826                           pclath	equ	0xFFA
  3827                           tblptru	equ	0xFF8
  3828                           tblptrh	equ	0xFF7
  3829                           tblptrl	equ	0xFF6
  3830                           tablat	equ	0xFF5
  3831                           prodh	equ	0xFF4
  3832                           prodl	equ	0xFF3
  3833                           intcon	equ	0xFF2
  3834                           intcon2	equ	0xFF1
  3835                           postinc0	equ	0xFEE
  3836                           fsr0h	equ	0xFEA
  3837                           fsr0l	equ	0xFE9
  3838                           wreg	equ	0xFE8
  3839                           fsr1h	equ	0xFE2
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           postinc2	equ	0xFDE
  3843                           postdec2	equ	0xFDD
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848                           	psect	temp
  3849  00004A                     btemp:
  3850                           	opt stack 0
  3851  00004A                     	ds	1
  3852  0000                     int$flags	set	btemp
  3853  0000                     wtemp6	set	btemp+1
  3854                           tosu	equ	0xFFF
  3855                           tosh	equ	0xFFE
  3856                           tosl	equ	0xFFD
  3857                           pclatu	equ	0xFFB
  3858                           pclath	equ	0xFFA
  3859                           tblptru	equ	0xFF8
  3860                           tblptrh	equ	0xFF7
  3861                           tblptrl	equ	0xFF6
  3862                           tablat	equ	0xFF5
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           intcon2	equ	0xFF1
  3867                           postinc0	equ	0xFEE
  3868                           fsr0h	equ	0xFEA
  3869                           fsr0l	equ	0xFE9
  3870                           wreg	equ	0xFE8
  3871                           fsr1h	equ	0xFE2
  3872                           fsr1l	equ	0xFE1
  3873                           indf2	equ	0xFDF
  3874                           postinc2	equ	0xFDE
  3875                           postdec2	equ	0xFDD
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8


Data Sizes:
    Strings     465
    Constant    0
    Data        0
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      73
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E5439 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_28(CODE[23]), STR_27(CODE[29]), STR_26(CODE[14]), STR_25(CODE[25]), 
		 -> STR_24(CODE[22]), STR_23(CODE[23]), STR_22(CODE[26]), STR_21(CODE[27]), 
		 -> STR_20(CODE[29]), STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[14]), 
		 -> STR_16(CODE[25]), STR_15(CODE[22]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[27]), STR_11(CODE[29]), STR_10(CODE[24]), STR_9(CODE[64]), 
		 -> STR_8(CODE[23]), STR_7(CODE[26]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[19]), STR_3(CODE[18]), STR_2(CODE[16]), STR_1(CODE[46]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E5439 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    F5551.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F5546.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E5439 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    S614$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    S626$pTrFlag	PTR enum E5439 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E5439 size(2) Largest target is 0

    S626$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), NULL(NULL[0]), 

    S637$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    S637$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_Power_Monitoring
    _main->_Relay_Control
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _Relay_Control->_printf
    _Power_Monitoring->_printf
    _LED_Control->_printf
    _printf->_putch
    _putch->_EUSART1_Write
    _Flush_EUSART->_EUSART1_Read

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9594
                                             28 COMRAM     1     1      0
                       _EUSART1_Read
                      _EUSART1_Write
                        _LED_Control
                   _Power_Monitoring
                      _Relay_Control
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     196
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Relay_Control                                        1     1      0    2356
                                             27 COMRAM     1     1      0
                       _EUSART1_Read
                       _Flush_EUSART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Power_Monitoring                                     2     2      0    2356
                                             27 COMRAM     1     1      0
                       _EUSART1_Read
                       _Flush_EUSART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _LED_Control                                          0     0      0    2288
                       _EUSART1_Read
                       _Flush_EUSART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2    2240
                                             22 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                             21 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Flush_EUSART                                         0     0      0      24
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         1     1      0      24
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          18    18      0       0
                                              2 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (6) _I2C1_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C1_Stop                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_Write
   _LED_Control
     _EUSART1_Read
     _Flush_EUSART
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _printf
       _putch
         _EUSART1_Write
   _Power_Monitoring
     _EUSART1_Read
     _Flush_EUSART
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _printf
       _putch
         _EUSART1_Write
   _Relay_Control
     _EUSART1_Read
     _Flush_EUSART
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _printf
       _putch
         _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      49       1       77.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89       6        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 13 15:14:57 2018

                     _eusart1TxBufferRemaining 0015                                             l31 0790  
                                           l70 0388                                             l62 0318  
                                           l71 0390                                             l64 031E  
                                           l65 03AC                                             l73 039E  
                                           l82 079C                                             l66 0374  
                                           l83 0798                                             l67 03D4  
                                           l92 03EC                                             l68 037A  
                                           l93 0478                                             l69 0380  
                                           l94 044C                                             l97 04A0  
                                           l98 0450                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                                 __CFG_CP3$OFF 000000                                            l101 0454  
                                          l120 055C                                            l104 0458  
                                          l107 045C                                            l124 0518  
                                          l117 04B8                                            l109 046A  
                                          l118 0534                                            l126 0526  
                                          l414 05F8                                            l423 05CC  
                                          l416 061E                                            l424 05F0  
                                          l425 05EE                                            l456 06F0  
                                          l457 06EA                                   __CFG_CPB$OFF 000000  
                                 __CFG_CPD$OFF 000000                                            prod 000FF3  
                                          tosl 000FFD                                   ?_LED_Control 002D  
                                          wreg 000FE8                                     _TXSTA1bits 000FAC  
                                 __CFG_LVP$OFF 000000                                  ?_Flush_EUSART 002D  
                             __end_of_I2C1_ISR 0310                                           l1559 05BC  
                                         STR_1 7E6D                                           STR_2 7FD3  
                                         STR_3 7FC1                                           STR_4 7FAE  
                                         STR_5 7F99                                           STR_6 7FF1  
                                         STR_7 7F0A                                           STR_8 7F6C  
                                         STR_9 7E2D                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _WPUB 000F85                                  _EUSART1_Write 05BA  
                                         _main 0310                                  ?_EUSART1_Read 002D  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 004A  
                                __CFG_BORV$190 000000                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00EE  
                                __CFG_IESO$OFF 000000                                  __CFG_MCLRE$ON 000000  
                                 ___param_bank 000000                                     _i2c1_state 001B  
               __size_of_OSCILLATOR_Initialize 0016                  __end_of_OSCILLATOR_Initialize 0796  
                                        ?_main 002D                              __end_of_I2C1_Stop 07CE  
                                        STR_10 7F3D                                          STR_11 7EB8  
                                        STR_20 7EB8                                          STR_12 7ED5  
                                        STR_21 7ED5                                          STR_13 7EF0  
                                        STR_22 7EF0                                          STR_14 7F55  
                                        STR_23 7F55                                          STR_15 7F83  
                                        STR_24 7F83                                          STR_16 7F24  
                                        STR_25 7F24                                          STR_17 7FE3  
                                        STR_26 7FE3                                          STR_18 7E9B  
                                        STR_27 7E9B                                          STR_19 7F6C  
                                        STR_28 7F6C                                 __CFG_DEBUG$OFF 000000  
                                        i2l301 0764                                          i2l260 0108  
                                        i2l262 0152                                          i2l271 019E  
                                        i2l263 0162                                          i2l191 0084  
                                        i2l280 0222                                          i2l272 01AC  
                                        i2l441 06BC                                          i2l265 016A  
                                        i2l442 06DC                                          i2l290 027E  
                                        i2l282 0228                                          i2l274 01DA  
                                        i2l266 0172                                          i2l435 0684  
                                        i2l259 02CA                                          i2l283 0238  
                                        i2l267 0180                                          i2l187 0062  
                                        i2l436 0680                                          i2l292 0286  
                                        i2l276 0214                                          i2l293 028E  
                                        i2l285 025C                                          i2l269 0198  
                                        i2l189 006E                                          i2l294 02AE  
                                        i2l286 0254                                          i2l295 02B4  
                                        i2l296 02B8                                          i2l289 026E  
                                        i2l298 02C0                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                 __end_of_I2C1_BusCollisionISR 07DA                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                           _EUSART1_Transmit_ISR 065A  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                              ??_I2C1_Initialize 0041  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                                 ??_Flush_EUSART 0042  
                               __CFG_EBTRB$OFF 000000                                          _putch 07BC  
                               ?_EUSART1_Write 002D                                          pclath 000FFA  
                                        tablat 000FF5                                 ??_EUSART1_Read 0041  
                                        status 000FD8                                 __CFG_T3CMX$RC0 000000  
                                        wtemp6 004B                                 __CFG_ICPRT$OFF 000000  
                    __size_of_Power_Monitoring 00BC                                 __CFG_PBADEN$ON 000000  
                              __initialization 070A                     __end_of_EUSART1_Initialize 05BA  
                                 __end_of_main 03E6                                 __CFG_PCLKEN$ON 000000  
                  ?_INTERRUPT_InterruptManager 002D                                    _i2c1_object 0001  
                                       ??_main 0049                                  __activetblptr 000002  
                        ?_EUSART1_Transmit_ISR 002D                                 __CFG_SDOMX$RB3 000000  
                              __CFG_CCP2MX$RC1 000000                                         _ACTCON 000FB5  
                                       _ANSELA 000F5B                                         ?_putch 002D  
                                       _ANSELB 000F5C                                         _ANSELC 000F5D  
                 __size_of_EUSART1_is_rx_ready 0004                                         i2l1301 0152  
                               __CFG_WDTEN$OFF 000000                                         _RCREG1 000FAE  
                                       _RCSTA1 000FAB                                         _OSCCON 000FD3  
                                       _PLLRDY 007E97                                         _SPBRG1 000FAF  
                                       _TXREG1 000FAD                                         _TXSTA1 000FAC  
                               __CFG_XINST$OFF 000000                                 _p_i2c1_current 000A  
                               __CFG_STVREN$ON 000000                                  main@selection 0049  
                                    ?_I2C1_ISR 002D                                         clear_0 0710  
                                       clear_1 071C                                         _printf 06E0  
                                 __mediumconst 7E2C                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                              ??_EUSART1_Write 0041                           __size_of_LED_Control 0022  
                              _eusart1RxBuffer 0060                  __size_of_INTERRUPT_Initialize 0004  
                              _eusart1TxBuffer 0080                           __CFG_LS48MHZ$SYS48X8 000000  
                            _SYSTEM_Initialize 076A                                     __accesstop 0060  
                      __end_of__initialization 0722                             ?_SYSTEM_Initialize 002D  
                                ___rparam_used 000001                                 _i2c1_trb_count 001A  
                        _I2C1_FunctionComplete 0752                           _I2C1_BusCollisionISR 07D6  
                               __pcstackCOMRAM 002D                               __CFG_nPWRTEN$OFF 000000  
                          ??_SYSTEM_Initialize 0043                           __end_of_Flush_EUSART 07A8  
                                __end_of_putch 07C6                                     ??_I2C1_ISR 002D  
                         __end_of_EUSART1_Read 0628                         __size_of_Relay_Control 00CC  
                       ??_EUSART1_Transmit_ISR 002D                    __end_of_EUSART1_Receive_ISR 06E0  
                    __end_of_SYSTEM_Initialize 0780                                        ??_putch 0042  
                                _eusart1RxHead 0014                                  _eusart1TxHead 0017  
                                _eusart1RxTail 0013                                     __pbssBANK0 0060  
                                _eusart1TxTail 0016              _EUSART1_TxDefaultInterruptHandler 0010  
              ??_EUSART1_SetRxInterruptHandler 0043                               _Power_Monitoring 04B2  
                        ?_I2C1_BusCollisionISR 002D                              __CFG_PLLSEL$PLL3X 000000  
              Power_Monitoring@power_selection 0048                                _I2C1_Initialize 0628  
                                      ?_printf 0043                                        _OSCCON2 000FD2  
                                    _I2C1_Stop 07C6                                        _OSCTUNE 000F9B  
                                      _SPBRGH1 000FB0                                        i2u76_48 0078  
                                      i2u79_48 008E                                        i2u79_49 00A2  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                             __CFG_CFGPLLEN$ON 000000                                  _Relay_Control 03E6  
                       ?_I2C1_FunctionComplete 002D                                        __Hparam 0000  
                                      __Lparam 0000                             _p_i2c1_trb_current 000C  
                          _EUSART1_is_rx_ready 07D2                                        __pcinit 070A  
                                      __ramtop 0800                                        __ptext0 0310  
                                      __ptext1 076A                                        __ptext2 0688  
                                      __ptext3 0780                                        __ptext4 07CE  
                                      __ptext5 0628                                        __ptext6 056E  
                                      __ptext7 07A8                                        __ptext8 07B2  
                                      __ptext9 03E6                                __size_of_printf 002A  
                        _OSCILLATOR_Initialize 0780                             _EUSART1_Initialize 056E  
                     ??_PIN_MANAGER_Initialize 0041                                     ?_I2C1_Stop 002D  
                   __size_of_SYSTEM_Initialize 0016                           I2C1_ISR@pi2c_buf_ptr 0008  
                         end_of_initialization 0722                           ?_EUSART1_is_rx_ready 002D  
                          ?_EUSART1_Initialize 002D                                 ?_Relay_Control 002D  
                                __Lmediumconst 7E2C                          __size_of_Flush_EUSART 0012  
                       ??_I2C1_BusCollisionISR 002D                        __end_of_I2C1_Initialize 065A  
        __end_of_EUSART1_SetRxInterruptHandler 07BC         __size_of_EUSART1_SetRxInterruptHandler 000A  
                _EUSART1_SetRxInterruptHandler 07B2                                        printf@c 0047  
                                      printf@f 0043                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART1_Read 0034                           ??_EUSART1_Initialize 0043  
                            __size_of_I2C1_ISR 021E                            EUSART1_Write@txData 0041  
                                 _Flush_EUSART 0796                          ??_EUSART1_is_rx_ready 0041  
            I2C1_ISR@i2c_10bit_address_restart 0018                                   _EUSART1_Read 05F4  
                 __end_of_INTERRUPT_Initialize 07D2                        I2C1_MasterWrite@trBlock 0021  
                     I2C1_Stop@completion_code 002D                         ?_OSCILLATOR_Initialize 002D  
                     __end_of_Power_Monitoring 056E                                 __end_of_printf 070A  
                                ??_LED_Control 0048                            start_initialization 070A  
                                  ??_I2C1_Stop 002D                __size_of_PIN_MANAGER_Initialize 002C  
EUSART1_SetRxInterruptHandler@interruptHandler 0041  EUSART1_SetTxInterruptHandler@interruptHandler 0041  
                                  putch@txData 0042                                ??_Relay_Control 0048  
                        __end_of_EUSART1_Write 05F4                                __CFG_nLPBOR$OFF 000000  
                             ?_I2C1_Initialize 002D                 ?_EUSART1_SetRxInterruptHandler 0041  
                                     ??_printf 0045                                 _eusart1RxCount 0012  
                                  __pbssCOMRAM 0001              _EUSART1_RxDefaultInterruptHandler 000E  
                __size_of_EUSART1_Transmit_ISR 002E                                  _i2c1_tr_queue 0026  
                          __end_of_LED_Control 0752                ??_EUSART1_SetTxInterruptHandler 0043  
                      ??_I2C1_FunctionComplete 002D                   __size_of_EUSART1_Receive_ISR 002C  
                       _PIN_MANAGER_Initialize 0688                                      __pintcode 0008  
                                __pmediumconst 7E2C                                       _I2C1_ISR 00F2  
                 ??_INTERRUPT_InterruptManager 002F                                       _BAUDCON1 000FB8  
                               __size_of_putch 000A                           _INTERRUPT_Initialize 07CE  
                       I2C1_MasterRead@trBlock 001C                                       _LATAbits 000F89  
                                     _PIE1bits 000F9D                                       _PIE2bits 000FA0  
          __size_of_INTERRUPT_InterruptManager 00E6                                       _PIR1bits 000F9E  
                                     _PIR2bits 000FA1                                       _RCONbits 000FD0  
                             __CFG_WDTPS$32768 000000                                       _SSP1CON1 000FC6  
                                     _SSP1CON3 000FCB                                       _SSP1STAT 000FC7  
                                  _LED_Control 0730                                    _INTCON2bits 000FF1  
                        ?_INTERRUPT_Initialize 002D                          EUSART1_Read@readValue 0041  
        __end_of_EUSART1_SetTxInterruptHandler 07B2         __size_of_EUSART1_SetTxInterruptHandler 000A  
                _EUSART1_SetTxInterruptHandler 07A8                                       __Hrparam 0000  
                __size_of_I2C1_BusCollisionISR 0004                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                         I2C1_ISR@i2c_bytes_left 0019  
                      ??_OSCILLATOR_Initialize 0041                    __size_of_EUSART1_Initialize 004C  
                  __end_of_EUSART1_is_rx_ready 07D6                              ?_Power_Monitoring 002D  
                          I2C1_ISR@i2c_address 002B                             ??_Power_Monitoring 0048  
                                     __ptext10 04B2                                       __ptext11 0730  
                                     __ptext20 07C6                                       __ptext12 06E0  
                                     __ptext21 0752                                       __ptext13 07BC  
                                     __ptext22 07D6                                       __ptext14 05BA  
                                     __ptext23 065A                                       __ptext15 0796  
                                     __ptext24 06B4                                       __ptext16 07D2  
                                     __ptext25 0000                                       __ptext17 05F4  
                                     __ptext19 00F2                                   _SSP1CON1bits 000FC6  
                                 _SSP1CON2bits 000FC5                                  __size_of_main 00D6  
                                     int$flags 004A             __end_of_INTERRUPT_InterruptManager 00EE  
                   _INTERRUPT_InterruptManager 0008                            _EUSART1_Receive_ISR 06B4  
                                   _INTCONbits 000FF2                         ??_INTERRUPT_Initialize 0041  
                                     intlevel2 0000                           ?_EUSART1_Receive_ISR 002D  
                        __end_of_Relay_Control 04B2                   Relay_Control@relay_selection 0048  
                      ?_PIN_MANAGER_Initialize 002D                 __size_of_I2C1_FunctionComplete 0018  
                                   _RCSTA1bits 000FAB                  __end_of_I2C1_FunctionComplete 076A  
                 __end_of_EUSART1_Transmit_ISR 0688                           Power_Monitoring@addr 002D  
                                     printf@ap 0045                 ?_EUSART1_SetTxInterruptHandler 0041  
                     __size_of_I2C1_Initialize 0032                         __size_of_EUSART1_Write 003A  
                          __CFG_CPUDIV$CLKDIV3 000000                             __CFG_FOSC$INTOSCIO 000000  
                        ??_EUSART1_Receive_ISR 002D                 __end_of_PIN_MANAGER_Initialize 06B4  
                           __size_of_I2C1_Stop 0008  
